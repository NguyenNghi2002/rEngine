<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Raylib-cs</name>
    </assembly>
    <members>
        <member name="F:Raylib_cs.Raylib.nativeLibName">
            <summary>
            Used by DllImport to load the native library
            </summary>
        </member>
        <member name="M:Raylib_cs.Raylib.Fade(Raylib_cs.Color,System.Single)">
            <summary>
            Get color with alpha applied, alpha goes from 0.0f to 1.0f<br/>
            NOTE: Added for compatability with previous versions
            </summary>
        </member>
        <member name="M:Raylib_cs.Raylib.InitWindow(System.Int32,System.Int32,System.SByte*)">
            <summary>Initialize window and OpenGL context</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.WindowShouldClose">
            <summary>Check if KEY_ESCAPE pressed or Close icon pressed</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CloseWindow">
            <summary>Close window and unload OpenGL context</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsWindowReady">
            <summary>Check if window has been initialized successfully</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsWindowFullscreen">
            <summary>Check if window is currently fullscreen</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsWindowHidden">
            <summary>Check if window is currently hidden (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsWindowMinimized">
            <summary>Check if window is currently minimized (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsWindowMaximized">
            <summary>Check if window is currently maximized (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsWindowFocused">
            <summary>Check if window is currently focused (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsWindowResized">
            <summary>Check if window has been resized last frame</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsWindowState(Raylib_cs.ConfigFlags)">
            <summary>Check if one specific window flag is enabled</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetWindowState(Raylib_cs.ConfigFlags)">
            <summary>Set window configuration state using flags</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ClearWindowState(Raylib_cs.ConfigFlags)">
            <summary>Clear window configuration state flags</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ToggleFullscreen">
            <summary>Toggle window state: fullscreen/windowed (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.MaximizeWindow">
            <summary>Set window state: maximized, if resizable (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.MinimizeWindow">
            <summary>Set window state: minimized, if resizable (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.RestoreWindow">
            <summary>Set window state: not minimized/maximized (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetWindowIcon(Raylib_cs.Image)">
            <summary>Set icon for window (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetWindowTitle(System.SByte*)">
            <summary>Set title for window (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetWindowPosition(System.Int32,System.Int32)">
            <summary>Set window position on screen (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetWindowMonitor(System.Int32)">
            <summary>Set monitor for the current window (fullscreen mode)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetWindowMinSize(System.Int32,System.Int32)">
            <summary>Set window minimum dimensions (for FLAG_WINDOW_RESIZABLE)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetWindowSize(System.Int32,System.Int32)">
            <summary>Set window dimensions</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetWindowOpacity(System.Single)">
            <summary>Set window opacity [0.0f..1.0f] (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetWindowHandle">
            <summary>Get native window handle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetScreenWidth">
            <summary>Get current screen width</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetScreenHeight">
            <summary>Get current screen height</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetRenderWidth">
            <summary>Get current render width (it considers HiDPI)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetRenderHeight">
            <summary>Get current render height (it considers HiDPI)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMonitorCount">
            <summary>Get number of connected monitors</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetCurrentMonitor">
            <summary>Get current connected monitor</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMonitorPosition(System.Int32)">
            <summary>Get specified monitor position</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMonitorWidth(System.Int32)">
            <summary>Get specified monitor width</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMonitorHeight(System.Int32)">
            <summary>Get specified monitor height</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMonitorPhysicalWidth(System.Int32)">
            <summary>Get specified monitor physical width in millimetres</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMonitorPhysicalHeight(System.Int32)">
            <summary>Get specified monitor physical height in millimetres</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMonitorRefreshRate(System.Int32)">
            <summary>Get specified monitor refresh rate</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetWindowPosition">
            <summary>Get window position XY on monitor</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetWindowScaleDPI">
            <summary>Get window scale DPI factor</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMonitorName(System.Int32)">
            <summary>Get the human-readable, UTF-8 encoded name of the specified monitor</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetClipboardText">
            <summary>Get clipboard text content</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetClipboardText(System.SByte*)">
            <summary>Set clipboard text content</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.EnableEventWaiting">
            <summary>Enable waiting for events on EndDrawing(), no automatic event polling</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DisableEventWaiting">
            <summary>Disable waiting for events on EndDrawing(), automatic events polling</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SwapScreenBuffer">
            <summary>Swap back buffer with front buffer (screen drawing)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.PollInputEvents">
            <summary>Register all input events</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.WaitTime(System.Double)">
            <summary>Wait for some time (halt program execution)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ShowCursor">
            <summary>Shows cursor</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.HideCursor">
            <summary>Hides cursor</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsCursorHidden">
            <summary>Check if cursor is not visible</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.EnableCursor">
            <summary>Enables cursor (unlock cursor)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DisableCursor">
            <summary>Disables cursor (lock cursor)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsCursorOnScreen">
            <summary>Disables cursor (lock cursor)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ClearBackground(Raylib_cs.Color)">
            <summary>Set background color (framebuffer clear color)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.BeginDrawing">
            <summary>Setup canvas (framebuffer) to start drawing</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.EndDrawing">
            <summary>End canvas drawing and swap buffers (double buffering)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.BeginMode2D(Raylib_cs.Camera2D)">
            <summary>Initialize 2D mode with custom camera (2D)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.EndMode2D">
            <summary>Ends 2D mode with custom camera</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.BeginMode3D(Raylib_cs.Camera3D)">
            <summary>Initializes 3D mode with custom camera (3D)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.EndMode3D">
            <summary>Ends 3D mode and returns to default 2D orthographic mode</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.BeginTextureMode(Raylib_cs.RenderTexture2D)">
            <summary>Initializes render texture for drawing</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.EndTextureMode">
            <summary>Ends drawing to render texture</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.BeginShaderMode(Raylib_cs.Shader)">
            <summary>Begin custom shader drawing</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.EndShaderMode">
            <summary>End custom shader drawing (use default shader)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.BeginBlendMode(Raylib_cs.BlendMode)">
            <summary>Begin blending mode (alpha, additive, multiplied)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.EndBlendMode">
            <summary>End blending mode (reset to default: alpha blending)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.BeginScissorMode(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Begin scissor mode (define screen area for following drawing)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.EndScissorMode">
            <summary>End scissor mode</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.BeginVrStereoMode(Raylib_cs.VrStereoConfig)">
            <summary>Begin stereo rendering (requires VR simulator)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.EndVrStereoMode">
            <summary>End stereo rendering (requires VR simulator)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadVrStereoConfig(Raylib_cs.VrDeviceInfo)">
            <summary>Load VR stereo config for VR simulator device parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadVrStereoConfig(Raylib_cs.VrStereoConfig)">
            <summary>Unload VR stereo configs</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadShader(System.SByte*,System.SByte*)">
            <summary>Load shader from files and bind default locations</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadShaderFromMemory(System.SByte*,System.SByte*)">
            <summary>Load shader from code strings and bind default locations</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetShaderLocation(Raylib_cs.Shader,System.SByte*)">
            <summary>Get shader uniform location</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetShaderLocationAttrib(Raylib_cs.Shader,System.SByte*)">
            <summary>Get shader attribute location</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetShaderValue(Raylib_cs.Shader,System.Int32,System.Void*,Raylib_cs.ShaderUniformDataType)">
            <summary>Set shader uniform value</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetShaderValueV(Raylib_cs.Shader,System.Int32,System.Void*,Raylib_cs.ShaderUniformDataType,System.Int32)">
            <summary>Set shader uniform value vector</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetShaderValueMatrix(Raylib_cs.Shader,System.Int32,System.Numerics.Matrix4x4)">
            <summary>Set shader uniform value (matrix 4x4)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetShaderValueTexture(Raylib_cs.Shader,System.Int32,Raylib_cs.Texture2D)">
            <summary>Set shader uniform value for texture</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadShader(Raylib_cs.Shader)">
            <summary>Unload shader from GPU memory (VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMouseRay(System.Numerics.Vector2,Raylib_cs.Camera3D)">
            <summary>Get a ray trace from mouse position</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetCameraMatrix(Raylib_cs.Camera3D)">
            <summary>Get camera transform matrix (view matrix)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetCameraMatrix2D(Raylib_cs.Camera2D)">
            <summary>Get camera 2d transform matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetWorldToScreen(System.Numerics.Vector3,Raylib_cs.Camera3D)">
            <summary>Get the screen space position for a 3d world space position</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetWorldToScreenEx(System.Numerics.Vector3,Raylib_cs.Camera3D,System.Int32,System.Int32)">
            <summary>Get size position for a 3d world space position</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetWorldToScreen2D(System.Numerics.Vector2,Raylib_cs.Camera2D)">
            <summary>Get the screen space position for a 2d camera world space position</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetScreenToWorld2D(System.Numerics.Vector2,Raylib_cs.Camera2D)">
            <summary>Get the world space position for a 2d camera screen space position</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetTargetFPS(System.Int32)">
            <summary>Set target FPS (maximum)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetFPS">
            <summary>Get current FPS</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetFrameTime">
            <summary>Get time in seconds for last frame drawn</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetTime">
            <summary>Get elapsed time in seconds since InitWindow()</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetRandomValue(System.Int32,System.Int32)">
            <summary>Get a random value between min and max (both included)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetRandomSeed(System.UInt32)">
            <summary>Set the seed for the random number generator</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TakeScreenshot(System.SByte*)">
            <summary>Takes a screenshot of current screen (saved a .png)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetConfigFlags(Raylib_cs.ConfigFlags)">
            <summary>Setup window configuration flags (view FLAGS)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TraceLog(Raylib_cs.TraceLogLevel,System.SByte*)">
            <summary>Show trace log messages (LOG_DEBUG, LOG_INFO, LOG_WARNING, LOG_ERROR)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetTraceLogLevel(Raylib_cs.TraceLogLevel)">
            <summary>Set the current threshold (minimum) log level</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.MemAlloc(System.Int32)">
            <summary>Internal memory allocator</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.MemRealloc(System.Void*,System.Int32)">
            <summary>Internal memory reallocator</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.MemFree(System.Void*)">
            <summary>Internal memory free</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetTraceLogCallback()">
            <summary>Set custom trace log</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetLoadFileDataCallback()">
            <summary>Set custom file binary data loader</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetSaveFileDataCallback()">
            <summary>Set custom file binary data saver</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetLoadFileTextCallback()">
            <summary>Set custom file text data loader</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetSaveFileTextCallback()">
            <summary>Set custom file text data saver</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadFileData(System.SByte*,System.UInt32*)">
            <summary>Load file data as byte array (read)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadFileData(System.Byte*)">
            <summary>Unload file data allocated by LoadFileData()</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SaveFileData(System.SByte*,System.Void*,System.UInt32)">
            <summary>Save data to file from byte array (write)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportDataAsCode(System.SByte*,System.UInt32,System.SByte*)">
            <summary>Export data to code (.h), returns true on success</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsFileExtension(System.SByte*,System.SByte*)">
            <summary>Check file extension</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetFileLength(System.SByte*)">
            <summary> Get file length in bytes</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetFileExtension(System.SByte*)">
            <summary>Get pointer to extension for a filename string (includes dot: '.png')</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetFileName(System.SByte*)">
            <summary>Get pointer to filename for a path string</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetFileNameWithoutExt(System.SByte*)">
            <summary>Get filename string without extension (uses static string)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetDirectoryPath(System.SByte*)">
            <summary>Get full path for a given fileName with path (uses static string)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetPrevDirectoryPath(System.SByte*)">
            <summary>Get previous directory path for a given path (uses static string)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetWorkingDirectory">
            <summary>Get current working directory (uses static string)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetApplicationDirectory">
            <summary>Get the directory of the running application (uses static string)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadDirectoryFiles(System.SByte*,System.Int32*)">
            <summary>Get filenames in a directory path (memory should be freed)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadDirectoryFiles(Raylib_cs.FilePathList)">
            <summary>Clear directory files paths buffers (free memory)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsPathFile(System.SByte*)">
            <summary>Check if a given path is a file or a directory</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ChangeDirectory(System.SByte*)">
            <summary>Change working directory, return true on success</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsFileDropped">
            <summary>Check if a file has been dropped into window</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadDroppedFiles">
            <summary>Get dropped files names (memory should be freed)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadDroppedFiles(Raylib_cs.FilePathList)">
            <summary>Clear dropped files paths buffer (free memory)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetFileModTime(System.SByte*)">
            <summary>Get file modification time (last write time)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CompressData(System.Byte*,System.Int32,System.Int32*)">
            <summary>Compress data (DEFLATE algorithm)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DecompressData(System.Byte*,System.Int32,System.Int32*)">
            <summary>Decompress data (DEFLATE algorithm)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.EncodeDataBase64(System.Byte*,System.Int32,System.Int32*)">
            <summary>Encode data to Base64 string</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DecodeDataBase64(System.Byte*,System.Int32*)">
            <summary>Decode Base64 string data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.OpenURL(System.SByte*)">
            <summary>Open URL with default system browser (if available)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsKeyPressed(Raylib_cs.KeyboardKey)">
            <summary>Detect if a key has been pressed once</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsKeyDown(Raylib_cs.KeyboardKey)">
            <summary>Detect if a key is being pressed</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsKeyReleased(Raylib_cs.KeyboardKey)">
            <summary>Detect if a key has been released once</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsKeyUp(Raylib_cs.KeyboardKey)">
            <summary>Detect if a key is NOT being pressed</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetExitKey(Raylib_cs.KeyboardKey)">
            <summary>Set a custom key to exit program (default is ESC)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetKeyPressed">
            <summary>Get key pressed (keycode), call it multiple times for keys queued</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetCharPressed">
            <summary>Get char pressed (unicode), call it multiple times for chars queued</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsGamepadAvailable(System.Int32)">
            <summary>Detect if a gamepad is available</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGamepadName(System.Int32)">
            <summary>Get gamepad internal name id</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsGamepadButtonPressed(System.Int32,Raylib_cs.GamepadButton)">
            <summary>Detect if a gamepad button has been pressed once</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsGamepadButtonDown(System.Int32,Raylib_cs.GamepadButton)">
            <summary>Detect if a gamepad button is being pressed</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsGamepadButtonReleased(System.Int32,Raylib_cs.GamepadButton)">
            <summary>Detect if a gamepad button has been released once</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsGamepadButtonUp(System.Int32,Raylib_cs.GamepadButton)">
            <summary>Detect if a gamepad button is NOT being pressed</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGamepadButtonPressed">
            <summary>Get the last gamepad button pressed</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGamepadAxisCount(System.Int32)">
            <summary>Get gamepad axis count for a gamepad</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGamepadAxisMovement(System.Int32,Raylib_cs.GamepadAxis)">
            <summary>Get axis movement value for a gamepad axis</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetGamepadMappings(System.SByte*)">
            <summary>Set internal gamepad mappings (SDL_GameControllerDB)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsMouseButtonPressed(Raylib_cs.MouseButton)">
            <summary>Detect if a mouse button has been pressed once</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsMouseButtonDown(Raylib_cs.MouseButton)">
            <summary>Detect if a mouse button is being pressed</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsMouseButtonReleased(Raylib_cs.MouseButton)">
            <summary>Detect if a mouse button has been released once</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsMouseButtonUp(Raylib_cs.MouseButton)">
            <summary>Detect if a mouse button is NOT being pressed</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMouseX">
            <summary>Get mouse position X</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMouseY">
            <summary>Get mouse position Y</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMousePosition">
            <summary>Get mouse position XY</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMouseDelta">
            <summary>Get mouse delta between frames</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetMousePosition(System.Int32,System.Int32)">
            <summary>Set mouse position XY</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetMouseOffset(System.Int32,System.Int32)">
            <summary>Set mouse offset</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetMouseScale(System.Single,System.Single)">
            <summary>Set mouse scaling</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMouseWheelMove">
            <summary>Get mouse wheel movement for X or Y, whichever is larger</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMouseWheelMoveV">
            <summary>Get mouse wheel movement for both X and Y</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetMouseCursor(Raylib_cs.MouseCursor)">
            <summary>Set mouse cursor</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetTouchX">
            <summary>Get touch position X for touch point 0 (relative to screen size)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetTouchY">
            <summary>Get touch position Y for touch point 0 (relative to screen size)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetTouchPosition(System.Int32)">
            <summary>Get touch position XY for a touch point index (relative to screen size)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetTouchPointId(System.Int32)">
            <summary>Get touch point identifier for given index</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetTouchPointCount">
            <summary>Get number of touch points</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetGesturesEnabled(Raylib_cs.Gesture)">
            <summary>Enable a set of gestures using flags</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsGestureDetected(Raylib_cs.Gesture)">
            <summary>Check if a gesture have been detected</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGestureDetected">
            <summary>Get latest detected gesture</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetTouchPointsCount">
            <summary>Get touch points count</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGestureHoldDuration">
            <summary>Get gesture hold time in milliseconds</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGestureDragVector">
            <summary>Get gesture drag vector</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGestureDragAngle">
            <summary>Get gesture drag angle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGesturePinchVector">
            <summary>Get gesture pinch delta</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGesturePinchAngle">
            <summary>Get gesture pinch angle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetCameraMode(Raylib_cs.Camera3D,Raylib_cs.CameraMode)">
            <summary>Set camera mode (multiple camera modes available)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UpdateCamera(Raylib_cs.Camera3D*)">
            <summary>Update camera position for selected mode</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetCameraPanControl(Raylib_cs.KeyboardKey)">
            <summary>Set camera pan key to combine with mouse movement (free camera)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetCameraAltControl(Raylib_cs.KeyboardKey)">
            <summary>Set camera alt key to combine with mouse movement (free camera)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetCameraSmoothZoomControl(Raylib_cs.KeyboardKey)">
            <summary>Set camera smooth zoom key to combine with mouse (free camera)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetCameraMoveControls(Raylib_cs.KeyboardKey,Raylib_cs.KeyboardKey,Raylib_cs.KeyboardKey,Raylib_cs.KeyboardKey,Raylib_cs.KeyboardKey,Raylib_cs.KeyboardKey)">
            <summary>Set camera move controls (1st person and 3rd person cameras)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetShapesTexture(Raylib_cs.Texture2D,Raylib_cs.Rectangle)">
            <summary>
            Set texture and rectangle to be used on shapes drawing<br/>
            NOTE: It can be useful when using basic shapes and one single font.<br/>
            Defining a white rectangle would allow drawing everything in a single draw call.
            </summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawPixel(System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw a pixel</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawPixelV(System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw a pixel (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw a line</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawLineV(System.Numerics.Vector2,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw a line (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawLineEx(System.Numerics.Vector2,System.Numerics.Vector2,System.Single,Raylib_cs.Color)">
            <summary>Draw a line defining thickness</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawLineBezier(System.Numerics.Vector2,System.Numerics.Vector2,System.Single,Raylib_cs.Color)">
            <summary>Draw a line using cubic-bezier curves in-out</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawLineBezierQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single,Raylib_cs.Color)">
            <summary>Draw line using quadratic bezier curves with a control point</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawLineBezierCubic(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single,Raylib_cs.Color)">
            <summary>Draw line using cubic bezier curves with 2 control points</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawLineStrip(System.Numerics.Vector2*,System.Int32,Raylib_cs.Color)">
            <summary>Draw lines sequence</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCircle(System.Int32,System.Int32,System.Single,Raylib_cs.Color)">
            <summary>Draw a color-filled circle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCircleSector(System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Int32,Raylib_cs.Color)">
            <summary>Draw a piece of a circle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCircleSectorLines(System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Int32,Raylib_cs.Color)">
            <summary>Draw circle sector outline</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCircleGradient(System.Int32,System.Int32,System.Single,Raylib_cs.Color,Raylib_cs.Color)">
            <summary>Draw a gradient-filled circle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCircleV(System.Numerics.Vector2,System.Single,Raylib_cs.Color)">
            <summary>Draw a color-filled circle (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCircleLines(System.Int32,System.Int32,System.Single,Raylib_cs.Color)">
            <summary>Draw circle outline</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawEllipse(System.Int32,System.Int32,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw ellipse</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawEllipseLines(System.Int32,System.Int32,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw ellipse outline</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRing(System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Single,System.Int32,Raylib_cs.Color)">
            <summary>Draw ring</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRingLines(System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Single,System.Int32,Raylib_cs.Color)">
            <summary>Draw ring outline</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw a color-filled rectangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRectangleV(System.Numerics.Vector2,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw a color-filled rectangle (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRectangleRec(Raylib_cs.Rectangle,Raylib_cs.Color)">
            <summary>Draw a color-filled rectangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRectanglePro(Raylib_cs.Rectangle,System.Numerics.Vector2,System.Single,Raylib_cs.Color)">
            <summary>Draw a color-filled rectangle with pro parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRectangleGradientV(System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color,Raylib_cs.Color)">
            <summary>Draw a vertical-gradient-filled rectangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRectangleGradientH(System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color,Raylib_cs.Color)">
            <summary>Draw a horizontal-gradient-filled rectangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRectangleGradientEx(Raylib_cs.Rectangle,Raylib_cs.Color,Raylib_cs.Color,Raylib_cs.Color,Raylib_cs.Color)">
            <summary>Draw a gradient-filled rectangle with custom vertex colors</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRectangleLines(System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw rectangle outline</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRectangleLinesEx(Raylib_cs.Rectangle,System.Single,Raylib_cs.Color)">
            <summary>Draw rectangle outline with extended parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRectangleRounded(Raylib_cs.Rectangle,System.Single,System.Int32,Raylib_cs.Color)">
            <summary>Draw rectangle with rounded edges</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRectangleRoundedLines(Raylib_cs.Rectangle,System.Single,System.Int32,System.Single,Raylib_cs.Color)">
            <summary>Draw rectangle with rounded edges outline</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw a color-filled triangle (vertex in counter-clockwise order!)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTriangleLines(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw triangle outline (vertex in counter-clockwise order!)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTriangleFan(System.Numerics.Vector2*,System.Int32,Raylib_cs.Color)">
            <summary>Draw a triangle fan defined by points (first vertex is the center)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTriangleStrip(System.Numerics.Vector2*,System.Int32,Raylib_cs.Color)">
            <summary>Draw a triangle strip defined by points</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawPoly(System.Numerics.Vector2,System.Int32,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw a regular polygon (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawPolyLines(System.Numerics.Vector2,System.Int32,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw a polygon outline of n sides</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawPolyLinesEx(System.Numerics.Vector2,System.Int32,System.Single,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw a polygon outline of n sides with extended parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionRecs(Raylib_cs.Rectangle,Raylib_cs.Rectangle)">
            <summary>Check collision between two rectangles</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionCircles(System.Numerics.Vector2,System.Single,System.Numerics.Vector2,System.Single)">
            <summary>Check collision between two circles</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionCircleRec(System.Numerics.Vector2,System.Single,Raylib_cs.Rectangle)">
            <summary>Check collision between circle and rectangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionPointRec(System.Numerics.Vector2,Raylib_cs.Rectangle)">
            <summary>Check if point is inside rectangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionPointCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
            <summary>Check if point is inside circle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionPointTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>Check if point is inside a triangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionLines(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2*)">
            <summary>Check the collision between two lines defined by two points each, returns collision point by reference</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionPointLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Int32)">
            <summary>Check if point belongs to line created between two points [p1] and [p2] with defined margin in pixels [threshold]</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetCollisionRec(Raylib_cs.Rectangle,Raylib_cs.Rectangle)">
            <summary>Get collision rectangle for two rectangles collision</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadImage(System.SByte*)">
            <summary>Load image from file into CPU memory (RAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadImageRaw(System.SByte*,System.Int32,System.Int32,Raylib_cs.PixelFormat,System.Int32)">
            <summary>Load image from RAW file data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadImageAnim(System.SByte*,System.Int32*)">
            <summary>Load image sequence from file (frames appended to image.data)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadImageFromMemory(System.SByte*,System.Byte*,System.Int32)">
            <summary>Load image from memory buffer, fileType refers to extension: i.e. "png"</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadImageFromTexture(Raylib_cs.Texture2D)">
            <summary>Load image from GPU texture data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadImageFromScreen">
            <summary>Load image from screen buffer and (screenshot)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadImage(Raylib_cs.Image)">
            <summary>Unload image from CPU memory (RAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportImage(Raylib_cs.Image,System.SByte*)">
            <summary>Export image data to file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportImageAsCode(Raylib_cs.Image,System.SByte*)">
            <summary>Export image as code file defining an array of bytes</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenImageColor(System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Generate image: plain color</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenImageGradientV(System.Int32,System.Int32,Raylib_cs.Color,Raylib_cs.Color)">
            <summary>Generate image: vertical gradient</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenImageGradientH(System.Int32,System.Int32,Raylib_cs.Color,Raylib_cs.Color)">
            <summary>Generate image: horizontal gradient</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenImageGradientRadial(System.Int32,System.Int32,System.Single,Raylib_cs.Color,Raylib_cs.Color)">
            <summary>Generate image: radial gradient</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenImageChecked(System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color,Raylib_cs.Color)">
            <summary>Generate image: checked</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenImageWhiteNoise(System.Int32,System.Int32,System.Single)">
            <summary>Generate image: white noise</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenImageCellular(System.Int32,System.Int32,System.Int32)">
            <summary>Generate image: cellular algorithm, bigger tileSize means bigger cells</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageCopy(Raylib_cs.Image)">
            <summary>Create an image duplicate (useful for transformations)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageFromImage(Raylib_cs.Image,Raylib_cs.Rectangle)">
            <summary>Create an image from another image piece</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageText(System.SByte*,System.Int32,Raylib_cs.Color)">
            <summary>Create an image from text (default font)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageTextEx(Raylib_cs.Font,System.SByte*,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Create an image from text (custom sprite font)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageToPOT(Raylib_cs.Image*,Raylib_cs.Color)">
            <summary>Convert image to POT (power-of-two)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageFormat(Raylib_cs.Image*,Raylib_cs.PixelFormat)">
            <summary>Convert image data to desired format</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageAlphaMask(Raylib_cs.Image*,Raylib_cs.Image)">
            <summary>Apply alpha mask to image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageAlphaClear(Raylib_cs.Image*,Raylib_cs.Color,System.Single)">
            <summary>Clear alpha channel to desired color</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageAlphaCrop(Raylib_cs.Image*,System.Single)">
            <summary>Crop image depending on alpha value</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageAlphaPremultiply(Raylib_cs.Image*)">
            <summary>Premultiply alpha channel</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageCrop(Raylib_cs.Image*,Raylib_cs.Rectangle)">
            <summary>Crop an image to a defined rectangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageResize(Raylib_cs.Image*,System.Int32,System.Int32)">
            <summary>Resize image (Bicubic scaling algorithm)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageResizeNN(Raylib_cs.Image*,System.Int32,System.Int32)">
            <summary>Resize image (Nearest-Neighbor scaling algorithm)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageResizeCanvas(Raylib_cs.Image*,System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Resize canvas and fill with color</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageMipmaps(Raylib_cs.Image*)">
            <summary>Generate all mipmap levels for a provided image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDither(Raylib_cs.Image*,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Dither image data to 16bpp or lower (Floyd-Steinberg dithering)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageFlipVertical(Raylib_cs.Image*)">
            <summary>Flip image vertically</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageFlipHorizontal(Raylib_cs.Image*)">
            <summary>Flip image horizontally</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageRotateCW(Raylib_cs.Image*)">
            <summary>Rotate image clockwise 90deg</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageRotateCCW(Raylib_cs.Image*)">
            <summary>Rotate image counter-clockwise 90deg</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorTint(Raylib_cs.Image*,Raylib_cs.Color)">
            <summary>Modify image color: tint</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorInvert(Raylib_cs.Image*)">
            <summary>Modify image color: invert</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorGrayscale(Raylib_cs.Image*)">
            <summary>Modify image color: grayscale</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorContrast(Raylib_cs.Image*,System.Single)">
            <summary>Modify image color: contrast (-100 to 100)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorBrightness(Raylib_cs.Image*,System.Int32)">
            <summary>Modify image color: brightness (-255 to 255)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorReplace(Raylib_cs.Image*,Raylib_cs.Color,Raylib_cs.Color)">
            <summary>Modify image color: replace color</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadImageColors(Raylib_cs.Image)">
            <summary>Load color data from image as a Color array (RGBA - 32bit)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadImagePalette(Raylib_cs.Image,System.Int32,System.Int32*)">
            <summary>Load colors palette from image as a Color array (RGBA - 32bit)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadImageColors(Raylib_cs.Color*)">
            <summary>Unload color data loaded with LoadImageColors()</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadImagePalette(Raylib_cs.Color*)">
            <summary>Unload colors palette loaded with LoadImagePalette()</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetImageAlphaBorder(Raylib_cs.Image,System.Single)">
            <summary>Get image alpha border rectangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetImageColor(Raylib_cs.Image,System.Int32,System.Int32)">
            <summary>Get image pixel color at (x, y) position</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageClearBackground(Raylib_cs.Image*,Raylib_cs.Color)">
            <summary>Clear image background with given color</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawPixel(Raylib_cs.Image*,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw pixel within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawPixelV(Raylib_cs.Image*,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw pixel within an image (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawLine(Raylib_cs.Image*,System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw line within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawLineV(Raylib_cs.Image*,System.Numerics.Vector2,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw line within an image (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawCircle(Raylib_cs.Image*,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw circle within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawCircleV(Raylib_cs.Image*,System.Numerics.Vector2,System.Int32,Raylib_cs.Color)">
            <summary>Draw circle within an image (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawRectangle(Raylib_cs.Image*,System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw rectangle within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawRectangleV(Raylib_cs.Image*,System.Numerics.Vector2,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw rectangle within an image (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawRectangleRec(Raylib_cs.Image*,Raylib_cs.Rectangle,Raylib_cs.Color)">
            <summary>Draw rectangle within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawRectangleLines(Raylib_cs.Image*,Raylib_cs.Rectangle,System.Int32,Raylib_cs.Color)">
            <summary>Draw rectangle lines within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDraw(Raylib_cs.Image*,Raylib_cs.Image,Raylib_cs.Rectangle,Raylib_cs.Rectangle,Raylib_cs.Color)">
            <summary>Draw a source image within a destination image (tint applied to source)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawText(Raylib_cs.Image*,System.SByte*,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw text (using default font) within an image (destination)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawTextEx(Raylib_cs.Image*,Raylib_cs.Font,System.SByte*,System.Numerics.Vector2,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw text (custom sprite font) within an image (destination)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadTexture(System.SByte*)">
            <summary>Load texture from file into GPU memory (VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadTextureFromImage(Raylib_cs.Image)">
            <summary>Load texture from image data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadTextureCubemap(Raylib_cs.Image,Raylib_cs.CubemapLayout)">
            <summary>Load cubemap from image, multiple image cubemap layouts supported</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadRenderTexture(System.Int32,System.Int32)">
            <summary>Load texture for rendering (framebuffer)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadTexture(Raylib_cs.Texture2D)">
            <summary>Unload texture from GPU memory (VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadRenderTexture(Raylib_cs.RenderTexture2D)">
            <summary>Unload render texture from GPU memory (VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UpdateTexture(Raylib_cs.Texture2D,System.Void*)">
            <summary>Update GPU texture with new data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UpdateTextureRec(Raylib_cs.Texture2D,Raylib_cs.Rectangle,System.Void*)">
            <summary>Update GPU texture rectangle with new data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenTextureMipmaps(Raylib_cs.Texture2D*)">
            <summary>Generate GPU mipmaps for a texture</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetTextureFilter(Raylib_cs.Texture2D,Raylib_cs.TextureFilter)">
            <summary>Set texture scaling filter mode</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetTextureWrap(Raylib_cs.Texture2D,Raylib_cs.TextureWrap)">
            <summary>Set texture wrapping mode</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTexture(Raylib_cs.Texture2D,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw a Texture2D</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextureV(Raylib_cs.Texture2D,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw a Texture2D with position defined as Vector2</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextureEx(Raylib_cs.Texture2D,System.Numerics.Vector2,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw a Texture2D with extended parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextureRec(Raylib_cs.Texture2D,Raylib_cs.Rectangle,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw a part of a texture defined by a rectangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextureQuad(Raylib_cs.Texture2D,System.Numerics.Vector2,System.Numerics.Vector2,Raylib_cs.Rectangle,Raylib_cs.Color)">
            <summary>Draw texture quad with tiling and offset parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextureTiled(Raylib_cs.Texture2D,Raylib_cs.Rectangle,Raylib_cs.Rectangle,System.Numerics.Vector2,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw part of a texture (defined by a rectangle) with rotation and scale tiled into dest</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTexturePro(Raylib_cs.Texture2D,Raylib_cs.Rectangle,Raylib_cs.Rectangle,System.Numerics.Vector2,System.Single,Raylib_cs.Color)">
            <summary>Draw a part of a texture defined by a rectangle with 'pro' parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextureNPatch(Raylib_cs.Texture2D,Raylib_cs.NPatchInfo,Raylib_cs.Rectangle,System.Numerics.Vector2,System.Single,Raylib_cs.Color)">
            <summary>Draws a texture (or part of it) that stretches or shrinks nicely</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTexturePoly(Raylib_cs.Texture2D,System.Numerics.Vector2,System.Numerics.Vector2*,System.Numerics.Vector2*,System.Int32,Raylib_cs.Color)">
            <summary>Draw a textured polygon</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ColorToInt(Raylib_cs.Color)">
            <summary>Get hexadecimal value for a Color</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ColorNormalize(Raylib_cs.Color)">
            <summary>Get color normalized as float [0..1]</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ColorFromNormalized(System.Numerics.Vector4)">
            <summary>Get color from normalized values [0..1]</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ColorToHSV(Raylib_cs.Color)">
            <summary>Get HSV values for a Color, hue [0..360], saturation/value [0..1]</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ColorFromHSV(System.Single,System.Single,System.Single)">
            <summary>Get a Color from HSV values, hue [0..360], saturation/value [0..1]</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ColorAlpha(Raylib_cs.Color,System.Single)">
            <summary>Get color with alpha applied, alpha goes from 0.0f to 1.0f</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ColorAlphaBlend(Raylib_cs.Color,Raylib_cs.Color,Raylib_cs.Color)">
            <summary>Get src alpha-blended into dst color with tint</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetColor(System.UInt32)">
            <summary>Get Color structure from hexadecimal value</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetPixelColor(System.Void*,Raylib_cs.PixelFormat)">
            <summary>Get Color from a source pixel pointer of certain format</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetPixelColor(System.Void*,Raylib_cs.Color,Raylib_cs.PixelFormat)">
            <summary>Set color formatted into destination pixel pointer</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetPixelDataSize(System.Int32,System.Int32,Raylib_cs.PixelFormat)">
            <summary>Get pixel data size in bytes for certain format</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetFontDefault">
            <summary>Get the default Font</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadFont(System.SByte*)">
            <summary>Load font from file into GPU memory (VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadFontEx(System.SByte*,System.Int32,System.Int32*,System.Int32)">
            <summary>
            Load font from file with extended parameters, use NULL for fontChars and 0 for glyphCount to load
            the default character set
            </summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadFontFromImage(Raylib_cs.Image,Raylib_cs.Color,System.Int32)">
            <summary>Load font from Image (XNA style)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadFontFromMemory(System.SByte*,System.Byte*,System.Int32,System.Int32,System.Int32*,System.Int32)">
            <summary>Load font from memory buffer, fileType refers to extension: i.e. "ttf"</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadFontData(System.Byte*,System.Int32,System.Int32,System.Int32*,System.Int32,Raylib_cs.FontType)">
            <summary>Load font data for further use</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenImageFontAtlas(Raylib_cs.GlyphInfo*,Raylib_cs.Rectangle**,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Generate image font atlas using chars info</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadFontData(Raylib_cs.GlyphInfo*,System.Int32)">
            <summary>Unload font chars info data (RAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadFont(Raylib_cs.Font)">
            <summary>Unload Font from GPU memory (VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportFontAsCode(Raylib_cs.Font,System.SByte*)">
            <summary>Export font as code file, returns true on success</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawFPS(System.Int32,System.Int32)">
            <summary>Shows current FPS</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawText(System.SByte*,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw text (using default font)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextEx(Raylib_cs.Font,System.SByte*,System.Numerics.Vector2,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw text using font and additional parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextPro(Raylib_cs.Font,System.SByte*,System.Numerics.Vector2,System.Numerics.Vector2,System.Single,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw text using Font and pro parameters (rotation)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextCodepoint(Raylib_cs.Font,System.Int32,System.Numerics.Vector2,System.Single,Raylib_cs.Color)">
            <summary>Draw one character (codepoint)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextCodepoints(Raylib_cs.Font,System.Int32*,System.Int32,System.Numerics.Vector2,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw multiple characters (codepoint)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.MeasureText(System.SByte*,System.Int32)">
            <summary>Measure string width for default font</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.MeasureTextEx(Raylib_cs.Font,System.SByte*,System.Single,System.Single)">
            <summary>Measure string size for Font</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGlyphIndex(Raylib_cs.Font,System.Int32)">
            <summary>Get glyph index position in font for a codepoint (unicode character), fallback to '?' if not found</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGlyphInfo(Raylib_cs.Font,System.Int32)">
            <summary>Get glyph font info data for a codepoint (unicode character), fallback to '?' if not found</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGlyphAtlasRec(Raylib_cs.Font,System.Int32)">
            <summary>Get glyph rectangle in font atlas for a codepoint (unicode character), fallback to '?' if not found</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadCodepoints(System.SByte*,System.Int32*)">
            <summary>Get all codepoints in a string, codepoints count returned by parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadCodepoints(System.Int32*)">
            <summary>Unload codepoints data from memory</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetCodepointCount(System.SByte*)">
            <summary>Get total number of characters (codepoints) in a UTF8 encoded string</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetCodepoint(System.SByte*,System.Int32*)">
            <summary>Get next codepoint in a UTF8 encoded string; 0x3f('?') is returned on failure</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CodepointToUTF8(System.Int32,System.Int32*)">
            <summary>Encode codepoint into utf8 text (char array length returned as parameter)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextCodepointsToUTF8(System.Int32*,System.Int32)">
            <summary>Encode text as codepoints array into UTF-8 text string (WARNING: memory must be freed!)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextIsEqual(System.SByte*,System.SByte*)">
            <summary>Check if two text string are equal</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextLength(System.SByte*)">
            <summary>Get text length, checks for '\0' ending</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextFormat(System.SByte*)">
            <summary>Text formatting with variables (sprintf style)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextSubtext(System.SByte*,System.Int32,System.Int32)">
            <summary>Get a piece of a text string</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextReplace(System.Char*,System.SByte*,System.SByte*)">
            <summary>Replace text string (WARNING: memory must be freed!)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextInsert(System.SByte*,System.SByte*,System.Int32)">
            <summary>Insert text in a position (WARNING: memory must be freed!)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextJoin(System.SByte**,System.Int32,System.SByte*)">
            <summary>Join text strings with delimiter</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextSplit(System.SByte*,System.Char,System.Int32*)">
            <summary>Split text into multiple strings</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextAppend(System.SByte*,System.SByte*,System.Int32*)">
            <summary>Append text at specific position and move cursor!</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextFindIndex(System.SByte*,System.SByte*)">
            <summary>Find first text occurrence within a string</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextToUpper(System.SByte*)">
            <summary>Get upper case version of provided string</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextToLower(System.SByte*)">
            <summary>Get lower case version of provided string</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextToPascal(System.SByte*)">
            <summary>Get Pascal case notation version of provided string</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextToInteger(System.SByte*)">
            <summary>Get integer value from text (negative values not supported)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawLine3D(System.Numerics.Vector3,System.Numerics.Vector3,Raylib_cs.Color)">
            <summary>Draw a line in 3D world space</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawPoint3D(System.Numerics.Vector3,Raylib_cs.Color)">
            <summary>Draw a point in 3D space, actually a small line</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCircle3D(System.Numerics.Vector3,System.Single,System.Numerics.Vector3,System.Single,Raylib_cs.Color)">
            <summary>Draw a circle in 3D world space</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTriangle3D(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,Raylib_cs.Color)">
            <summary>Draw a color-filled triangle (vertex in counter-clockwise order!)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTriangleStrip3D(System.Numerics.Vector3*,System.Int32,Raylib_cs.Color)">
            <summary>Draw a triangle strip defined by points</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCube(System.Numerics.Vector3,System.Single,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw cube</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCubeV(System.Numerics.Vector3,System.Numerics.Vector3,Raylib_cs.Color)">
            <summary>Draw cube (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCubeWires(System.Numerics.Vector3,System.Single,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw cube wires</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCubeWiresV(System.Numerics.Vector3,System.Numerics.Vector3,Raylib_cs.Color)">
            <summary>Draw cube wires (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCubeTexture(Raylib_cs.Texture2D,System.Numerics.Vector3,System.Single,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw cube textured</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCubeTextureRec(Raylib_cs.Texture2D,System.Numerics.Vector3,System.Single,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw cube with a region of a texture</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawSphere(System.Numerics.Vector3,System.Single,Raylib_cs.Color)">
            <summary>Draw sphere</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawSphereEx(System.Numerics.Vector3,System.Single,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw sphere with extended parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawSphereWires(System.Numerics.Vector3,System.Single,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw sphere wires</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCylinder(System.Numerics.Vector3,System.Single,System.Single,System.Single,System.Int32,Raylib_cs.Color)">
            <summary>Draw a cylinder/cone</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCylinderEx(System.Numerics.Vector3,System.Numerics.Vector3,System.Single,System.Single,System.Int32,Raylib_cs.Color)">
            <summary>Draw a cylinder with base at startPos and top at endPos</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCylinderWires(System.Numerics.Vector3,System.Single,System.Single,System.Single,System.Int32,Raylib_cs.Color)">
            <summary>Draw a cylinder/cone wires</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawCylinderWiresEx(System.Numerics.Vector3,System.Numerics.Vector3,System.Single,System.Single,System.Int32,Raylib_cs.Color)">
            <summary>Draw a cylinder wires with base at startPos and top at endPos</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawPlane(System.Numerics.Vector3,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw a plane XZ</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawRay(Raylib_cs.Ray,Raylib_cs.Color)">
            <summary>Draw a ray line</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawGrid(System.Int32,System.Single)">
            <summary>Draw a grid (centered at (0, 0, 0))</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadModel(System.SByte*)">
            <summary>Load model from files (meshes and materials)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadModelFromMesh(Raylib_cs.Mesh)">
            <summary>Load model from generated mesh (default material)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadModel(Raylib_cs.Model)">
            <summary>Unload model from memory (RAM and/or VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadModelKeepMeshes(Raylib_cs.Model)">
            <summary>Unload model (but not meshes) from memory (RAM and/or VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetModelBoundingBox(Raylib_cs.Model)">
            <summary>Compute model bounding box limits (considers all meshes)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UploadMesh(Raylib_cs.Mesh*,Raylib_cs.CBool)">
            <summary>Upload vertex data into GPU and provided VAO/VBO ids</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UpdateMeshBuffer(Raylib_cs.Mesh,System.Int32,System.Void*,System.Int32,System.Int32)">
            <summary>Update mesh vertex data in GPU for a specific buffer index</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadMesh(Raylib_cs.Mesh*)">
            <summary>Unload mesh from memory (RAM and/or VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawMesh(Raylib_cs.Mesh,Raylib_cs.Material,System.Numerics.Matrix4x4)">
            <summary>Draw a 3d mesh with material and transform</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawMeshInstanced(Raylib_cs.Mesh,Raylib_cs.Material,System.Numerics.Matrix4x4*,System.Int32)">
            <summary>Draw multiple mesh instances with material and different transforms</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportMesh(Raylib_cs.Mesh,System.SByte*)">
            <summary>Export mesh data to file, returns true on success</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMeshBoundingBox(Raylib_cs.Mesh)">
            <summary>Compute mesh bounding box limits</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshTangents(Raylib_cs.Mesh*)">
            <summary>Compute mesh tangents</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadMaterials(System.SByte*,System.Int32*)">
            <summary>Load materials from model file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadMaterialDefault">
            <summary>Load default material (Supports: DIFFUSE, SPECULAR, NORMAL maps)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadMaterial(Raylib_cs.Material)">
            <summary>Unload material from GPU memory (VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetMaterialTexture(Raylib_cs.Material*,Raylib_cs.MaterialMapIndex,Raylib_cs.Texture2D)">
            <summary>Set texture for a material map type (MAP_DIFFUSE, MAP_SPECULAR...)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetModelMeshMaterial(Raylib_cs.Model*,System.Int32,System.Int32)">
            <summary>Set material for a mesh</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshPoly(System.Int32,System.Single)">
            <summary>Generate polygonal mesh</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshPlane(System.Single,System.Single,System.Int32,System.Int32)">
            <summary>Generate plane mesh (with subdivisions)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshCube(System.Single,System.Single,System.Single)">
            <summary>Generate cuboid mesh</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshSphere(System.Single,System.Int32,System.Int32)">
            <summary>Generate sphere mesh (standard sphere)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshHemiSphere(System.Single,System.Int32,System.Int32)">
            <summary>Generate half-sphere mesh (no bottom cap)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshCylinder(System.Single,System.Single,System.Int32)">
            <summary>Generate cylinder mesh</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshCone(System.Single,System.Single,System.Int32)">
            <summary>Generate cone/pyramid mesh</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshTorus(System.Single,System.Single,System.Int32,System.Int32)">
            <summary>Generate torus mesh</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshKnot(System.Single,System.Single,System.Int32,System.Int32)">
            <summary>Generate trefoil knot mesh</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshHeightmap(Raylib_cs.Image,System.Numerics.Vector3)">
            <summary>Generate heightmap mesh from image data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshCubicmap(Raylib_cs.Image,System.Numerics.Vector3)">
            <summary>Generate cubes-based map mesh from image data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawModel(Raylib_cs.Model,System.Numerics.Vector3,System.Single,Raylib_cs.Color)">
            <summary>Draw a model (with texture if set)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawModelEx(Raylib_cs.Model,System.Numerics.Vector3,System.Numerics.Vector3,System.Single,System.Numerics.Vector3,Raylib_cs.Color)">
            <summary>Draw a model with extended parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawModelWires(Raylib_cs.Model,System.Numerics.Vector3,System.Single,Raylib_cs.Color)">
            <summary>Draw a model wires (with texture if set)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawModelWiresEx(Raylib_cs.Model,System.Numerics.Vector3,System.Numerics.Vector3,System.Single,System.Numerics.Vector3,Raylib_cs.Color)">
            <summary>Draw a model wires (with texture if set) with extended parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawBoundingBox(Raylib_cs.BoundingBox,Raylib_cs.Color)">
            <summary>Draw bounding box (wires)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawBillboard(Raylib_cs.Camera3D,Raylib_cs.Texture2D,System.Numerics.Vector3,System.Single,Raylib_cs.Color)">
            <summary>Draw a billboard texture</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawBillboardRec(Raylib_cs.Camera3D,Raylib_cs.Texture2D,Raylib_cs.Rectangle,System.Numerics.Vector3,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw a billboard texture defined by source</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawBillboardPro(Raylib_cs.Camera3D,Raylib_cs.Texture2D,Raylib_cs.Rectangle,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector2,System.Numerics.Vector2,System.Single,Raylib_cs.Color)">
            <summary>Draw a billboard texture defined by source and rotation</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadModelAnimations(System.SByte*,System.UInt32*)">
            <summary>Load model animations from file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UpdateModelAnimation(Raylib_cs.Model,Raylib_cs.ModelAnimation,System.Int32)">
            <summary>Update model animation pose</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadModelAnimation(Raylib_cs.ModelAnimation)">
            <summary>Unload animation data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadModelAnimations(Raylib_cs.ModelAnimation[],System.UInt32)">
            <summary>Unload animation array data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsModelAnimationValid(Raylib_cs.Model,Raylib_cs.ModelAnimation)">
            <summary>Check model animation skeleton match</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionSpheres(System.Numerics.Vector3,System.Single,System.Numerics.Vector3,System.Single)">
            <summary>Detect collision between two spheres</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionBoxes(Raylib_cs.BoundingBox,Raylib_cs.BoundingBox)">
            <summary>Detect collision between two bounding boxes</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionBoxSphere(Raylib_cs.BoundingBox,System.Numerics.Vector3,System.Single)">
            <summary>Detect collision between box and sphere</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetRayCollisionSphere(Raylib_cs.Ray,System.Numerics.Vector3,System.Single)">
            <summary>Detect collision between ray and sphere</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetRayCollisionBox(Raylib_cs.Ray,Raylib_cs.BoundingBox)">
            <summary>Detect collision between ray and box</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetRayCollisionMesh(Raylib_cs.Ray,Raylib_cs.Mesh,System.Numerics.Matrix4x4)">
            <summary>Get collision info between ray and mesh</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetRayCollisionTriangle(Raylib_cs.Ray,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Get collision info between ray and triangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetRayCollisionQuad(Raylib_cs.Ray,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Get collision info between ray and quad</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.InitAudioDevice">
            <summary>Initialize audio device and context</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CloseAudioDevice">
            <summary>Close the audio device and context</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsAudioDeviceReady">
            <summary>Check if audio device has been initialized successfully</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetMasterVolume(System.Single)">
            <summary>Set master volume (listener)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadWave(System.SByte*)">
            <summary>Load wave data from file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadWaveFromMemory(System.SByte*,System.Byte*,System.Int32)">
            <summary>Load wave from memory buffer, fileType refers to extension: i.e. "wav"</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadSound(System.SByte*)">
            <summary>Load sound from file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadSoundFromWave(Raylib_cs.Wave)">
            <summary>Load sound from wave data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UpdateSound(Raylib_cs.Sound,System.Void*,System.Int32)">
            <summary>Update sound buffer with new data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadWave(Raylib_cs.Wave)">
            <summary>Unload wave data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadSound(Raylib_cs.Sound)">
            <summary>Unload sound</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportWave(Raylib_cs.Wave,System.SByte*)">
            <summary>Export wave data to file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportWaveAsCode(Raylib_cs.Wave,System.SByte*)">
            <summary>Export wave sample data to code (.h)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.PlaySound(Raylib_cs.Sound)">
            <summary>Play a sound</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.StopSound(Raylib_cs.Sound)">
            <summary>Stop playing a sound</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.PauseSound(Raylib_cs.Sound)">
            <summary>Pause a sound</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ResumeSound(Raylib_cs.Sound)">
            <summary>Resume a paused sound</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.PlaySoundMulti(Raylib_cs.Sound)">
            <summary>Play a sound (using multichannel buffer pool)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.StopSoundMulti">
            <summary>Stop any sound playing (using multichannel buffer pool)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetSoundsPlaying">
            <summary>Get number of sounds playing in the multichannel</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsSoundPlaying(Raylib_cs.Sound)">
            <summary>Check if a sound is currently playing</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetSoundVolume(Raylib_cs.Sound,System.Single)">
            <summary>Set volume for a sound (1.0 is max level)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetSoundPitch(Raylib_cs.Sound,System.Single)">
            <summary>Set pitch for a sound (1.0 is base level)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetSoundPan(Raylib_cs.Sound,System.Single)">
            <summary>Set pan for a sound (0.5 is center)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.WaveCopy(Raylib_cs.Wave)">
            <summary>Copy a wave to a new wave</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.WaveCrop(Raylib_cs.Wave*,System.Int32,System.Int32)">
            <summary>Crop a wave to defined samples range</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.WaveFormat(Raylib_cs.Wave*,System.Int32,System.Int32,System.Int32)">
            <summary>Convert wave data to desired format</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadWaveSamples(Raylib_cs.Wave)">
            <summary>Get samples data from wave as a floats array</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadWaveSamples(System.Single*)">
            <summary>Unload samples data loaded with LoadWaveSamples()</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadMusicStream(System.SByte*)">
            <summary>Load music stream from file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadMusicStreamFromMemory(System.SByte*,System.Byte*,System.Int32)">
            <summary>Load music stream from data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadMusicStream(Raylib_cs.Music)">
            <summary>Unload music stream</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.PlayMusicStream(Raylib_cs.Music)">
            <summary>Start music playing</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsMusicStreamPlaying(Raylib_cs.Music)">
            <summary>Check if music is playing</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UpdateMusicStream(Raylib_cs.Music)">
            <summary>Updates buffers for music streaming</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.StopMusicStream(Raylib_cs.Music)">
            <summary>Stop music playing</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.PauseMusicStream(Raylib_cs.Music)">
            <summary>Pause music playing</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ResumeMusicStream(Raylib_cs.Music)">
            <summary>Resume playing paused music</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SeekMusicStream(Raylib_cs.Music,System.Single)">
            <summary>Seek music to a position (in seconds)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetMusicVolume(Raylib_cs.Music,System.Single)">
            <summary>Set volume for music (1.0 is max level)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetMusicPitch(Raylib_cs.Music,System.Single)">
            <summary>Set pitch for a music (1.0 is base level)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetMusicPan(Raylib_cs.Music,System.Single)">
            <summary>Set pan for a music (0.5 is center)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMusicTimeLength(Raylib_cs.Music)">
            <summary>Get music time length (in seconds)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMusicTimePlayed(Raylib_cs.Music)">
            <summary>Get current music time played (in seconds)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadAudioStream(System.UInt32,System.UInt32,System.UInt32)">
            <summary>Init audio stream (to stream raw audio pcm data)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadAudioStream(Raylib_cs.AudioStream)">
            <summary>Unload audio stream and free memory</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UpdateAudioStream(Raylib_cs.AudioStream,System.Void*,System.Int32)">
            <summary>Update audio stream buffers with data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsAudioStreamProcessed(Raylib_cs.AudioStream)">
            <summary>Check if any audio stream buffers requires refill</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.PlayAudioStream(Raylib_cs.AudioStream)">
            <summary>Play audio stream</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.PauseAudioStream(Raylib_cs.AudioStream)">
            <summary>Pause audio stream</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ResumeAudioStream(Raylib_cs.AudioStream)">
            <summary>Resume audio stream</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsAudioStreamPlaying(Raylib_cs.AudioStream)">
            <summary>Check if audio stream is playing</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.StopAudioStream(Raylib_cs.AudioStream)">
            <summary>Stop audio stream</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetAudioStreamVolume(Raylib_cs.AudioStream,System.Single)">
            <summary>Set volume for audio stream (1.0 is max level)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetAudioStreamPitch(Raylib_cs.AudioStream,System.Single)">
            <summary>Set pitch for audio stream (1.0 is base level)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetAudioStreamPan(Raylib_cs.AudioStream,System.Single)">
            <summary>Set pan for audio stream (0.5 is centered)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetAudioStreamBufferSizeDefault(System.Int32)">
            <summary>Default size for new audio streams</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetAudioStreamCallback(Raylib_cs.AudioStream,)">
            <summary>Audio thread callback to request new data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.AttachAudioStreamProcessor(Raylib_cs.AudioStream,)">
            <summary>Attach audio stream processor to stream</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DetachAudioStreamProcessor(Raylib_cs.AudioStream,)">
            <summary>Detach audio stream processor from stream</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.InitWindow(System.Int32,System.Int32,System.String)">
            <summary>Initialize window and OpenGL context</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetWindowTitle(System.String)">
            <summary>Set title for window (only PLATFORM_DESKTOP)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetMonitorName_(System.Int32)">
            <summary>Get the human-readable, UTF-8 encoded name of the specified monitor</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetClipboardText_">
            <summary>Get clipboard text content</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetClipboardText(System.String)">
            <summary>Set clipboard text content</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadShader(System.String,System.String)">
            <summary>Load shader from files and bind default locations</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadShaderFromMemory(System.String,System.String)">
            <summary>Load shader from code string and bind default locations</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetShaderLocation(Raylib_cs.Shader,System.String)">
            <summary>Get shader uniform location</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetShaderLocationAttrib(Raylib_cs.Shader,System.String)">
            <summary>Get shader attribute location</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TakeScreenshot(System.String)">
            <summary>Takes a screenshot of current screen (saved a .png)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.IsFileExtension(System.String,System.String)">
            <summary>Check file extension</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetFileModTime(System.String)">
            <summary>Get file modification time (last write time)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadImage(System.String)">
            <summary>Load image from file into CPU memory (RAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadImageRaw(System.String,System.Int32,System.Int32,Raylib_cs.PixelFormat,System.Int32)">
            <summary>Load image from RAW file data</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadImageAnim(System.String,System.Int32@)">
            <summary>Load image sequence from file (frames appended to image.data)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportImage(Raylib_cs.Image,System.String)">
            <summary>Export image data to file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportImageAsCode(Raylib_cs.Image,System.String)">
            <summary>Export image as code file defining an array of bytes</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TraceLog(Raylib_cs.TraceLogLevel,System.String)">
            <summary>Show trace log messages (LOG_DEBUG, LOG_INFO, LOG_WARNING, LOG_ERROR)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetShaderValueV``1(Raylib_cs.Shader,System.Int32,``0[],Raylib_cs.ShaderUniformDataType,System.Int32)">
            <summary>Set shader uniform value vector</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetShaderValueV``1(Raylib_cs.Shader,System.Int32,System.Span{``0},Raylib_cs.ShaderUniformDataType,System.Int32)">
            <summary>Set shader uniform value vector</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetShaderValue``1(Raylib_cs.Shader,System.Int32,``0,Raylib_cs.ShaderUniformDataType)">
            <summary>Set shader uniform value</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetShaderValue``1(Raylib_cs.Shader,System.Int32,``0[],Raylib_cs.ShaderUniformDataType)">
            <summary>Set shader uniform value</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetShaderValue``1(Raylib_cs.Shader,System.Int32,System.Span{``0},Raylib_cs.ShaderUniformDataType)">
            <summary>Set shader uniform value</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadFileData(System.String,System.UInt32@)">
            <summary>Load file data as byte array (read)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetDroppedFiles">
            <summary>Get dropped files names (memory should be freed)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetGamepadName_(System.Int32)">
            <summary>Get gamepad internal name id</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UpdateCamera(Raylib_cs.Camera3D@)">
            <summary>Update camera position for selected mode</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.CheckCollisionLines(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2@)">
            <summary>Check the collision between two lines defined by two points each, returns collision point by reference</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageText(System.String,System.Int32,Raylib_cs.Color)">
            <summary>Create an image from text (default font)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageTextEx(Raylib_cs.Font,System.String,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Create an image from text (custom sprite font)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageToPOT(Raylib_cs.Image@,Raylib_cs.Color)">
            <summary>Convert image to POT (power-of-two)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageFormat(Raylib_cs.Image@,Raylib_cs.PixelFormat)">
            <summary>Convert image data to desired format</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageAlphaMask(Raylib_cs.Image@,Raylib_cs.Image)">
            <summary>Apply alpha mask to image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageAlphaClear(Raylib_cs.Image@,Raylib_cs.Color,System.Single)">
            <summary>Clear alpha channel to desired color</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageAlphaCrop(Raylib_cs.Image@,System.Single)">
            <summary>Crop image depending on alpha value</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageAlphaPremultiply(Raylib_cs.Image@)">
            <summary>Premultiply alpha channel</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageCrop(Raylib_cs.Image@,Raylib_cs.Rectangle)">
            <summary>Crop an image to a defined rectangle</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageResize(Raylib_cs.Image@,System.Int32,System.Int32)">
            <summary>Resize image (Bicubic scaling algorithm)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageResizeNN(Raylib_cs.Image@,System.Int32,System.Int32)">
            <summary>Resize image (Nearest-Neighbor scaling algorithm)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageResizeCanvas(Raylib_cs.Image@,System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Resize canvas and fill with color</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageMipmaps(Raylib_cs.Image@)">
            <summary>Generate all mipmap levels for a provided image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDither(Raylib_cs.Image@,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Dither image data to 16bpp or lower (Floyd-Steinberg dithering)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageFlipVertical(Raylib_cs.Image@)">
            <summary>Flip image vertically</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageFlipHorizontal(Raylib_cs.Image@)">
            <summary>Flip image horizontally</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageRotateCW(Raylib_cs.Image@)">
            <summary>Rotate image clockwise 90deg</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageRotateCCW(Raylib_cs.Image@)">
            <summary>Rotate image counter-clockwise 90deg</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorTint(Raylib_cs.Image@,Raylib_cs.Color)">
            <summary>Modify image color: tint</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorInvert(Raylib_cs.Image@)">
            <summary>Modify image color: invert</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorGrayscale(Raylib_cs.Image@)">
            <summary>Modify image color: grayscale</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorContrast(Raylib_cs.Image@,System.Single)">
            <summary>Modify image color: contrast (-100 to 100)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorBrightness(Raylib_cs.Image@,System.Int32)">
            <summary>Modify image color: brightness (-255 to 255)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageColorReplace(Raylib_cs.Image@,Raylib_cs.Color,Raylib_cs.Color)">
            <summary>Modify image color: replace color</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageClearBackground(Raylib_cs.Image@,Raylib_cs.Color)">
            <summary>Clear image background with given color</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawPixel(Raylib_cs.Image@,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw pixel within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawPixelV(Raylib_cs.Image@,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw pixel within an image (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawLine(Raylib_cs.Image@,System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw line within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawLineV(Raylib_cs.Image@,System.Numerics.Vector2,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw line within an image (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawCircle(Raylib_cs.Image@,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw circle within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawCircleV(Raylib_cs.Image@,System.Numerics.Vector2,System.Int32,Raylib_cs.Color)">
            <summary>Draw circle within an image (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawRectangle(Raylib_cs.Image@,System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw rectangle within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawRectangleV(Raylib_cs.Image@,System.Numerics.Vector2,System.Numerics.Vector2,Raylib_cs.Color)">
            <summary>Draw rectangle within an image (Vector version)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawRectangleRec(Raylib_cs.Image@,Raylib_cs.Rectangle,Raylib_cs.Color)">
            <summary>Draw rectangle within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawRectangleLines(Raylib_cs.Image@,Raylib_cs.Rectangle,System.Int32,Raylib_cs.Color)">
            <summary>Draw rectangle lines within an image</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDraw(Raylib_cs.Image@,Raylib_cs.Image,Raylib_cs.Rectangle,Raylib_cs.Rectangle,Raylib_cs.Color)">
            <summary>Draw a source image within a destination image (tint applied to source)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawText(Raylib_cs.Image@,System.String,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw text (using default font) within an image (destination)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ImageDrawTextEx(Raylib_cs.Image@,Raylib_cs.Font,System.String,System.Numerics.Vector2,System.Int32,System.Single,Raylib_cs.Color)">
            <summary>Draw text (custom sprite font) within an image (destination)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadTexture(System.String)">
            <summary>Load texture from file into GPU memory (VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenTextureMipmaps(Raylib_cs.Texture2D@)">
            <summary>Generate GPU mipmaps for a texture</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadFont(System.String)">
            <summary>Load font from file into GPU memory (VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadFontEx(System.String,System.Int32,System.Int32[],System.Int32)">
            <summary>Load font from file with extended parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UploadMesh(Raylib_cs.Mesh@,Raylib_cs.CBool)">
            <summary>Upload vertex data into GPU and provided VAO/VBO ids</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.UnloadMesh(Raylib_cs.Mesh@)">
            <summary>Unload mesh from memory (RAM and/or VRAM)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetMaterialTexture(Raylib_cs.Material@,Raylib_cs.MaterialMapIndex,Raylib_cs.Texture2D)">
            <summary>Set texture for a material map type (MAP_DIFFUSE, MAP_SPECULAR...)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.SetModelMeshMaterial(Raylib_cs.Model@,System.Int32,System.Int32)">
            <summary>Set material for a mesh</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadModelAnimations(System.String,System.UInt32@)">
            <summary>Load model animations from file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GenMeshTangents(Raylib_cs.Mesh@)">
            <summary>Compute mesh tangents</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.WaveFormat(Raylib_cs.Wave@,System.Int32,System.Int32,System.Int32)">
            <summary>Convert wave data to desired format</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.WaveCrop(Raylib_cs.Wave@,System.Int32,System.Int32)">
            <summary>Crop a wave to defined samples range</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawLineStrip(System.Numerics.Vector2[],System.Int32,Raylib_cs.Color)">
            <summary>Draw lines sequence</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTriangleFan(System.Numerics.Vector2[],System.Int32,Raylib_cs.Color)">
            <summary>Draw a triangle fan defined by points (first vertex is the center)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTriangleStrip(System.Numerics.Vector2[],System.Int32,Raylib_cs.Color)">
            <summary>Draw a triangle strip defined by points</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTexturePoly(Raylib_cs.Texture2D,System.Numerics.Vector2,System.Numerics.Vector2[],System.Numerics.Vector2[],System.Int32,Raylib_cs.Color)">
            <summary>Draw a textured polygon</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawText(System.String,System.Int32,System.Int32,System.Int32,Raylib_cs.Color)">
            <summary>Draw text (using default font)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextEx(Raylib_cs.Font,System.String,System.Numerics.Vector2,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw text using font and additional parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTextPro(Raylib_cs.Font,System.String,System.Numerics.Vector2,System.Numerics.Vector2,System.Single,System.Single,System.Single,Raylib_cs.Color)">
            <summary>Draw text using Font and pro parameters (rotation)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.MeasureText(System.String,System.Int32)">
            <summary>Measure string width for default font</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.MeasureTextEx(Raylib_cs.Font,System.String,System.Single,System.Single)">
            <summary>Measure string size for Font</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextAppend(System.String,System.String,System.Int32)">
            <summary>Append text at specific position and move cursor!</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextToPascal(System.String)">
            <summary>Get Pascal case notation version of provided string</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextToInteger(System.String)">
            <summary>Get integer value from text (negative values not supported)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadCodepoints(System.String,System.Int32@)">
            <summary>Get all codepoints in a string, codepoints count returned by parameters</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetCodepointCount(System.String)">
            <summary>Get total number of characters (codepoints) in a UTF8 encoded string</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.GetCodepoint(System.String,System.Int32@)">
            <summary>Get next codepoint in a UTF8 encoded string; 0x3f('?') is returned on failure</summary>
            <returns>single codepoint / "char"</returns>
        </member>
        <member name="M:Raylib_cs.Raylib.CodepointToUTF8(System.Int32,System.Int32@)">
            <summary>Encode codepoint into utf8 text (char array length returned as parameter)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.TextCodepointsToUTF8(System.Int32[],System.Int32)">
            <summary>Encode codepoint into utf8 text (char array length returned as parameter)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadModel(System.String)">
            <summary>Draw a model (with texture if set)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportMesh(Raylib_cs.Mesh,System.String)">
            <summary>Export mesh data to file, returns true on success</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawTriangleStrip3D(System.Numerics.Vector3[],System.Int32,Raylib_cs.Color)">
            <summary>Draw a triangle strip defined by points</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.DrawMeshInstanced(Raylib_cs.Mesh,Raylib_cs.Material,System.Numerics.Matrix4x4[],System.Int32)">
            <summary>Draw multiple mesh instances with material and different transforms</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadWave(System.String)">
            <summary>Load wave data from file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadSound(System.String)">
            <summary>Load sound from file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportWave(Raylib_cs.Wave,System.String)">
            <summary>Export wave data to file</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.ExportWaveAsCode(Raylib_cs.Wave,System.String)">
            <summary>Export wave sample data to code (.h)</summary>
        </member>
        <member name="M:Raylib_cs.Raylib.LoadMusicStream(System.String)">
            <summary>Load music stream from file</summary>
        </member>
        <member name="F:Raylib_cs.Raymath.nativeLibName">
            <summary>
            Used by DllImport to load the native library
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Clamp(System.Single,System.Single,System.Single)">
            <summary>Clamp float value</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Lerp(System.Single,System.Single,System.Single)">
            <summary>Calculate linear interpolation between two vectors</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Normalize(System.Single,System.Single,System.Single)">
            <summary>Normalize input value within input range</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Remap(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Remap input value within input range to output range</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Wrap(System.Single,System.Single,System.Single)">
            <summary>Wrap input value from min to max</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.FloatEquals(System.Single,System.Single)">
            <summary>Check whether two given floats are almost equal</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Zero">
            <summary>Vector with components value 0.0f</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2One">
            <summary>Vector with components value 1.0f</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Add(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>Add two vectors (v1 + v2)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2AddValue(System.Numerics.Vector2,System.Single)">
            <summary>Add vector and float value</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Subtract(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>Subtract two vectors (v1 - v2)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2SubtractValue(System.Numerics.Vector2,System.Single)">
            <summary>Subtract vector by float value</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Length(System.Numerics.Vector2)">
            <summary>Calculate vector length</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2LengthSqr(System.Numerics.Vector2)">
            <summary>Calculate vector square length</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2DotProduct(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>Calculate two vectors dot product</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Distance(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>Calculate distance between two vectors</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2DistanceSqr(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>Calculate square distance between two vectors</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Angle(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>Calculate angle from two vectors</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Scale(System.Numerics.Vector2,System.Single)">
            <summary>Scale vector (multiply by value)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>Multiply vector by vector</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Negate(System.Numerics.Vector2)">
            <summary>Negate vector</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Divide(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>Divide vector by vector</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Normalize(System.Numerics.Vector2)">
            <summary>Normalize provided vector</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
            <summary>Transforms a Vector2 by a given Matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
            <summary>Calculate linear interpolation between two vectors</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Reflect(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>Calculate reflected vector to normal</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Rotate(System.Numerics.Vector2,System.Single)">
            <summary>Rotate vector by angle</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2MoveTowards(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
            <summary>Move Vector towards target</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Invert(System.Numerics.Vector2)">
            <summary>Invert the given vector</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Clamp(System.Numerics.Vector2)">
            <summary>
            Clamp the components of the vector between min and max values specified by the given vectors
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2ClampValue(System.Numerics.Vector2,System.Single,System.Single)">
            <summary>Clamp the magnitude of the vector between two min and max values</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector2Equals(System.Numerics.Vector2,System.Numerics.Vector2)">
            <summary>Check whether two given vectors are almost equal</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Zero">
            <summary>Vector with components value 0.0f</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3One">
            <summary>Vector with components value 1.0f</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Add(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Add two vectors</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3AddValue(System.Numerics.Vector3,System.Single)">
            <summary>Add vector and float value</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Subtract(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Subtract two vectors</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3SubtractValue(System.Numerics.Vector3,System.Single)">
            <summary>Subtract vector and float value</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Scale(System.Numerics.Vector3,System.Single)">
            <summary>Multiply vector by scalar</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Multiply vector by vector</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3CrossProduct(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Calculate two vectors cross product</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Perpendicular(System.Numerics.Vector3)">
            <summary>Calculate one vector perpendicular vector</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Length(System.Numerics.Vector3)">
            <summary>Calculate vector length</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3LengthSqr(System.Numerics.Vector3)">
            <summary>Calculate vector square length</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3DotProduct(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Calculate two vectors dot product</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Distance(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Calculate distance between two vectors</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3DistanceSqr(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Calculate square distance between two vectors</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Angle(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Calculate angle between two vectors in XY and XZ</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Negate(System.Numerics.Vector3)">
            <summary>Negate provided vector (invert direction)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Divide(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Divide vector by vector</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Normalize(System.Numerics.Vector3)">
            <summary>Normalize provided vector</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3OrthoNormalize(System.Numerics.Vector3*,System.Numerics.Vector3*)">
            <summary>
            Orthonormalize provided vectors<br/>
            Makes vectors normalized and orthogonal to each other<br/>
            Gram-Schmidt function implementation
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
            <summary>Transforms a Vector3 by a given Matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3RotateByQuaternion(System.Numerics.Vector3,System.Numerics.Quaternion)">
            <summary>Transform a vector by quaternion rotation</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3RotateByAxisAngle(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
            <summary>Rotates a vector around an axis</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
            <summary>Calculate linear interpolation between two vectors</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Reflect(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Calculate reflected vector to normal</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Min(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Get min value for each pair of components</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Max(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Get max value for each pair of components</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Barycenter(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Compute barycenter coordinates (u, v, w) for point p with respect to triangle (a, b, c)<br/>
            NOTE: Assumes P is on the plane of the triangle
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Unproject(System.Numerics.Vector3,System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
            <summary>
            Projects a Vector3 from screen space into object space<br/>
            NOTE: We are avoiding calling other raymath functions despite available
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3ToFloatV(System.Numerics.Vector3)">
            <summary>Get Vector3 as float array</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Invert(System.Numerics.Vector3)">
            <summary>Invert the given vector</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Clamp the components of the vector between
            min and max values specified by the given vectors
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3ClampValue(System.Numerics.Vector3,System.Single,System.Single)">
            <summary>Clamp the magnitude of the vector between two values</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Equals(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Check whether two given vectors are almost equal</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.Vector3Refract(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
            <summary>
            Compute the direction of a refracted ray where v specifies the
            normalized direction of the incoming ray, n specifies the
            normalized normal vector of the interface of two optical media,
            and r specifies the ratio of the refractive index of the medium
            from where the ray comes to the refractive index of the medium
            on the other side of the surface
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixDeterminant(System.Numerics.Matrix4x4)">
            <summary>Compute matrix determinant</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixTrace(System.Numerics.Matrix4x4)">
            <summary>Get the trace of the matrix (sum of the values along the diagonal)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixTranspose(System.Numerics.Matrix4x4)">
            <summary>Transposes provided matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixInvert(System.Numerics.Matrix4x4)">
            <summary>Invert provided matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixNormalize(System.Numerics.Matrix4x4)">
            <summary>Normalize provided matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixIdentity">
            <summary>Get identity matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixAdd(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
            <summary>Add two matrices</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixSubtract(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
            <summary>Subtract two matrices (left - right)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixMultiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
            <summary>
            Get two matrix multiplication<br/>
            NOTE: When multiplying matrices... the order matters!
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixTranslate(System.Single,System.Single,System.Single)">
            <summary>Get translation matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixRotate(System.Numerics.Vector3,System.Single)">
            <summary>
            Create rotation matrix from axis and angle<br/>
            NOTE: Angle should be provided in radians
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixRotateX(System.Single)">
            <summary>Get x-rotation matrix (angle in radians)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixRotateY(System.Single)">
            <summary>Get y-rotation matrix (angle in radians)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixRotateZ(System.Single)">
            <summary>Get z-rotation matrix (angle in radians)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixRotateXYZ(System.Numerics.Vector3)">
            <summary>Get xyz-rotation matrix (angles in radians)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixRotateZYX(System.Numerics.Vector3)">
            <summary>Get zyx-rotation matrix (angles in radians)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixScale(System.Single,System.Single,System.Single)">
            <summary>Get scaling matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixFrustum(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Get perspective projection matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixPerspective(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Get perspective projection matrix<br/>
            NOTE: Angle should be provided in radians
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixOrtho(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Get orthographic projection matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Get camera look-at matrix (view matrix)</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.MatrixToFloatV(System.Numerics.Matrix4x4)">
            <summary>Get float array of matrix data</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionAdd(System.Numerics.Quaternion,System.Numerics.Quaternion)">
            <summary>Add 2 quaternions</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionAddValue(System.Numerics.Quaternion,System.Single)">
            <summary>Add quaternion and float value</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionSubtract(System.Numerics.Quaternion,System.Numerics.Quaternion)">
            <summary>Subtract 2 quaternions</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionSubtractValue(System.Numerics.Quaternion,System.Single)">
            <summary>Subtract quaternion and float value</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionIdentity">
            <summary>Get identity quaternion</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionLength(System.Numerics.Quaternion)">
            <summary>Computes the length of a quaternion</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionNormalize(System.Numerics.Quaternion)">
            <summary>Normalize provided quaternion</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionInvert(System.Numerics.Quaternion)">
            <summary>Invert provided quaternion</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionMultiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
            <summary>Calculate two quaternion multiplication</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionScale(System.Numerics.Quaternion,System.Single)">
            <summary>Scale quaternion by float value</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionDivide(System.Numerics.Quaternion,System.Numerics.Quaternion)">
            <summary>Divide two quaternions</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionLerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
            <summary>Calculate linear interpolation between two quaternions</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionNlerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
            <summary>Calculate slerp-optimized interpolation between two quaternions</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionSlerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
            <summary>Calculates spherical linear interpolation between two quaternions</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionFromVector3ToVector3(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>Calculate quaternion based on the rotation from one vector to another</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionFromMatrix(System.Numerics.Matrix4x4)">
            <summary>Get a quaternion for a given rotation matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionToMatrix(System.Numerics.Quaternion)">
            <summary>Get a matrix for a given quaternion</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionFromAxisAngle(System.Numerics.Vector3,System.Single)">
            <summary>
            Get rotation quaternion for an angle and axis<br/>
            NOTE: angle must be provided in radians
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionToAxisAngle(System.Numerics.Quaternion,System.Numerics.Vector3*,System.Single*)">
            <summary>Get the rotation angle and axis for a given quaternion</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionFromEuler(System.Single,System.Single,System.Single)">
            <summary>
            Get the quaternion equivalent to Euler angles<br/>
            NOTE: Rotation order is ZYX
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionToEuler(System.Numerics.Quaternion)">
            <summary>
            Get the Euler angles equivalent to quaternion (roll, pitch, yaw)<br/>
            NOTE: Angles are returned in a Vector3 struct in radians
            </summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionTransform(System.Numerics.Quaternion,System.Numerics.Matrix4x4)">
            <summary>Transform a quaternion given a transformation matrix</summary>
        </member>
        <member name="M:Raylib_cs.Raymath.QuaternionEquals(System.Numerics.Quaternion,System.Numerics.Quaternion)">
            <summary>Check whether two given quaternions are almost equal</summary>
        </member>
        <member name="F:Raylib_cs.Rlgl.nativeLibName">
            <summary>
            Used by DllImport to load the native library
            </summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlMatrixMode(System.Int32)">
            <summary>Choose the current matrix to be transformed</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlMatrixMode(Raylib_cs.MatrixMode)">
            <inheritdoc cref="M:Raylib_cs.Rlgl.rlMatrixMode(System.Int32)"/>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlPushMatrix">
            <summary>Push the current matrix to stack</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlPopMatrix">
            <summary>Pop lattest inserted matrix from stack</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadIdentity">
            <summary>Reset current matrix to identity matrix</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlTranslatef(System.Single,System.Single,System.Single)">
            <summary>Multiply the current matrix by a translation matrix</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlRotatef(System.Single,System.Single,System.Single,System.Single)">
            <summary>Multiply the current matrix by a rotation matrix</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlScalef(System.Single,System.Single,System.Single)">
            <summary>Multiply the current matrix by a scaling matrix</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlMultMatrixf(System.Single*)">
            <summary>
            Multiply the current matrix by another matrix<br/>
            Current Matrix can be set via <see cref="M:Raylib_cs.Rlgl.rlMatrixMode(System.Int32)"/>
            </summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlMultMatrixf(System.Numerics.Matrix4x4)">
            <inheritdoc cref="M:Raylib_cs.Rlgl.rlMultMatrixf(System.Single*)"/>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlViewport(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Set the viewport area</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlBegin(System.Int32)">
            <summary>Initialize drawing mode (how to organize vertex)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnd">
            <summary>Finish vertex providing</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlVertex2i(System.Int32,System.Int32)">
            <summary>Define one vertex (position) - 2 int</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlVertex2f(System.Single,System.Single)">
            <summary>Define one vertex (position) - 2 float</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlVertex3f(System.Single,System.Single,System.Single)">
            <summary>Define one vertex (position) - 3 float</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlTexCoord2f(System.Single,System.Single)">
            <summary>Define one vertex (texture coordinate) - 2 float</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlNormal3f(System.Single,System.Single,System.Single)">
            <summary>Define one vertex (normal) - 3 float</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlColor4ub(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>Define one vertex (color) - 4 byte</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlColor3f(System.Single,System.Single,System.Single)">
            <summary>Define one vertex (color) - 3 float</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlColor4f(System.Single,System.Single,System.Single,System.Single)">
            <summary>Define one vertex (color) - 4 float</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableVertexArray(System.UInt32)">
            <summary>Vertex buffers state</summary>
            <summary>Enable vertex array (VAO, if supported)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableVertexArray">
            <summary>Disable vertex array (VAO, if supported)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableVertexBuffer(System.UInt32)">
            <summary>Enable vertex buffer (VBO)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableVertexBuffer">
            <summary>Disable vertex buffer (VBO)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableVertexBufferElement(System.UInt32)">
            <summary>Enable vertex buffer element (VBO element)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableVertexBufferElement">
            <summary>Disable vertex buffer element (VBO element)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableVertexAttribute(System.UInt32)">
            <summary>Enable vertex attribute index</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableVertexAttribute(System.UInt32)">
            <summary>Disable vertex attribute index</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableStatePointer(System.Int32,System.Void*)">
            <summary>Enable attribute state pointer<br/>
            NOTE: Only available for GRAPHICS_API_OPENGL_11</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableStatePointer(System.Int32)">
            <summary>Disable attribute state pointer<br/>
            NOTE: Only available for GRAPHICS_API_OPENGL_11</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlActiveTextureSlot(System.Int32)">
            <summary>Select and active a texture slot</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableTexture(System.UInt32)">
            <summary>Enable texture</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableTexture">
            <summary>Disable texture</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableTextureCubemap(System.UInt32)">
            <summary>Enable texture cubemap</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableTextureCubemap">
            <summary>Disable texture cubemap</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlTextureParameters(System.UInt32,System.Int32,System.Int32)">
            <summary>Set texture parameters (filter, wrap)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableShader(System.UInt32)">
            <summary>Enable shader program</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableShader">
            <summary>Disable shader program</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableFramebuffer(System.UInt32)">
            <summary>Enable render texture (fbo)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableFramebuffer">
            <summary>Disable render texture (fbo), return to default framebuffer</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlActiveDrawBuffers(System.Int32)">
            <summary>Activate multiple draw color buffers</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableColorBlend">
            <summary>Enable color blending</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableColorBlend">
            <summary>Disable color blending</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableDepthTest">
            <summary>Enable depth test</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableDepthTest">
            <summary>Disable depth test</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableDepthMask">
            <summary>Enable depth write</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableDepthMask">
            <summary>Disable depth write</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableBackfaceCulling">
            <summary>Enable backface culling</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableBackfaceCulling">
            <summary>Disable backface culling</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableScissorTest">
            <summary>Enable scissor test</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableScissorTest">
            <summary>Disable scissor test</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlScissor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Scissor test</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableWireMode">
            <summary>Enable wire mode</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableWireMode">
            <summary>Disable wire mode</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetLineWidth(System.Single)">
            <summary>Set the line drawing width</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetLineWidth">
            <summary>Get the line drawing width</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableSmoothLines">
            <summary>Enable line aliasing</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableSmoothLines">
            <summary>Disable line aliasing</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlEnableStereoRender">
            <summary>Enable stereo rendering</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDisableStereoRender">
            <summary>Disable stereo rendering</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlIsStereoRenderEnabled">
            <summary>Check if stereo render is enabled</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlClearColor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>Clear color buffer with color</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlClearScreenBuffers">
            <summary>Clear used screen buffers (color and depth)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlCheckErrors">
            <summary>Check and log OpenGL error codes</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetBlendMode(Raylib_cs.BlendMode)">
            <summary>Set blending mode</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetBlendFactors(System.Int32,System.Int32,System.Int32)">
            <summary>Set blending mode factor and equation (using OpenGL factors)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlglInit(System.Int32,System.Int32)">
            <summary>Initialize rlgl (buffers, shaders, textures, states)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlglClose">
            <summary>De-inititialize rlgl (buffers, shaders, textures)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadExtensions(System.Void*)">
            <summary>Load OpenGL extensions</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetVersion">
            <summary>Get current OpenGL version</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetFramebufferWidth">
            <summary>Get default framebuffer width</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetFramebufferHeight">
            <summary>Get default framebuffer height</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetTextureIdDefault">
            <summary>Get default texture</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetShaderIdDefault">
            <summary>Get default shader</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetShaderLocsDefault">
            <summary>Get default shader locations</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadRenderBatch(System.Int32,System.Int32)">
            <summary>Load a render batch system<br/>
            NOTE: rlgl provides a default render batch to behave like OpenGL 1.1 immediate mode<br/>
            but this render batch API is exposed in case custom batches are required</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlUnloadRenderBatch(Raylib_cs.RenderBatch)">
            <summary>Unload render batch system</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDrawRenderBatch(Raylib_cs.RenderBatch*)">
            <summary>Draw render batch data (Update->Draw->Reset)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetRenderBatchActive(Raylib_cs.RenderBatch*)">
            <summary>Set the active render batch for rlgl (NULL for default internal)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlDrawRenderBatchActive">
            <summary>Update and draw internal render batch</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlCheckRenderBatchLimit(System.Int32)">
            <summary>Check internal buffer overflow for a given number of vertex</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetTexture(System.UInt32)">
            <summary>Set current texture for render batch and check buffers limits</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadVertexArray">
            <summary>Load vertex array (vao) if supported</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadVertexBuffer(System.Void*,System.Int32,Raylib_cs.CBool)">
            <summary>Load a vertex buffer attribute</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadVertexBufferElement(System.Void*,System.Int32,Raylib_cs.CBool)">
            <summary>Load a new attributes element buffer</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlUpdateVertexBuffer(System.UInt32,System.Void*,System.Int32,System.Int32)">
            <summary>Update GPU buffer with new data</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlUpdateVertexBufferElements(System.UInt32,System.Void*,System.Int32,System.Int32)">
            <summary>Update vertex buffer elements with new data</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetVertexAttributeDefault(System.Int32,System.Void*,System.Int32,System.Int32)">
            <summary>Set vertex attribute default value</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadTexture(System.Void*,System.Int32,System.Int32,Raylib_cs.PixelFormat,System.Int32)">
            <summary>Load texture in GPU</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadTextureDepth(System.Int32,System.Int32,Raylib_cs.CBool)">
            <summary>Load depth texture/renderbuffer (to be attached to fbo)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadTextureCubemap(System.Void*,System.Int32,Raylib_cs.PixelFormat)">
            <summary>Load texture cubemap</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlUpdateTexture(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,Raylib_cs.PixelFormat,System.Void*)">
            <summary>Update GPU texture with new data</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetGlTextureFormats(Raylib_cs.PixelFormat,System.Int32*,System.Int32*,System.Int32*)">
            <summary>Get OpenGL internal formats</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetPixelFormatName(Raylib_cs.PixelFormat)">
            <summary>Get OpenGL internal formats</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlUnloadTexture(System.UInt32)">
            <summary>Unload texture from GPU memory</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGenTextureMipmaps(System.UInt32,System.Int32,System.Int32,Raylib_cs.PixelFormat,System.Int32*)">
            <summary>Generate mipmap data for selected texture</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlReadTexturePixels(System.UInt32,System.Int32,System.Int32,Raylib_cs.PixelFormat)">
            <summary>Read texture pixel data</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlReadScreenPixels(System.Int32,System.Int32)">
            <summary>Read screen pixel data (color buffer)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadFramebuffer(System.Int32,System.Int32)">
            <summary>Load an empty framebuffer</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlFramebufferAttach(System.UInt32,System.UInt32,Raylib_cs.FramebufferAttachType,Raylib_cs.FramebufferAttachTextureType,System.Int32)">
            <summary>Attach texture/renderbuffer to a framebuffer</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlFramebufferComplete(System.UInt32)">
            <summary>Verify framebuffer is complete</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlUnloadFramebuffer(System.UInt32)">
            <summary>Delete framebuffer from GPU</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadShaderCode(System.SByte*,System.SByte*)">
            <summary>Load shader from code strings</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlCompileShader(System.SByte*,System.Int32)">
            <summary>Compile custom shader and return shader id<br/>
            (type: RL_VERTEX_SHADER, RL_FRAGMENT_SHADER, RL_COMPUTE_SHADER)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadShaderProgram(System.UInt32,System.UInt32)">
            <summary>Load custom shader program</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlUnloadShaderProgram(System.UInt32)">
            <summary>Unload shader program</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetLocationUniform(System.UInt32,System.SByte*)">
            <summary>Get shader location uniform</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetLocationAttrib(System.UInt32,System.SByte*)">
            <summary>Get shader location attribute</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetUniform(System.Int32,System.Void*,System.Int32,System.Int32)">
            <summary>Set shader value uniform</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetUniformMatrix(System.Int32,System.Numerics.Matrix4x4)">
            <summary>Set shader value matrix</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetUniformSampler(System.Int32,System.UInt32)">
            <summary>Set shader value sampler</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetShader(System.UInt32,System.Int32*)">
            <summary>Set shader currently active (id and locations)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadComputeShaderProgram(System.UInt32)">
            <summary>Load compute shader program</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlComputeShaderDispatch(System.UInt32,System.UInt32,System.UInt32)">
            <summary>Dispatch compute shader (equivalent to *draw* for graphics pilepine)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadShaderBuffer(System.UInt64,System.Void*,System.Int32)">
            <summary>Load shader storage buffer object (SSBO)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlUnloadShaderBuffer(System.UInt32)">
            <summary>Unload shader storage buffer object (SSBO)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlUpdateShaderBufferElements(System.UInt32,System.Void*,System.UInt64,System.UInt64)">
            <summary>Update SSBO buffer data</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetShaderBufferSize(System.UInt32,System.Void*,System.UInt64,System.UInt64)">
            <summary>Get SSBO buffer size</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlReadShaderBufferElements(System.UInt32,System.Void*,System.UInt64,System.UInt64)">
            <summary>Bind SSBO buffer</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlBindShaderBuffer(System.UInt32,System.UInt32)">
            <summary> Copy SSBO buffer data</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlCopyBuffersElements(System.UInt32,System.UInt32,System.UInt64,System.UInt64,System.UInt64)">
            <summary>Copy SSBO buffer data</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlBindImageTexture(System.UInt32,System.UInt32,System.UInt32,System.Int32)">
            <summary>Bind image texture</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetMatrixModelview">
            <summary>Get internal modelview matrix</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetMatrixProjection">
            <summary>Get internal projection matrix</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetMatrixTransform">
            <summary>Get internal accumulated transform matrix</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetMatrixProjectionStereo(System.Int32)">
            <summary>Get internal projection matrix for stereo render (selected eye)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlGetMatrixViewOffsetStereo(System.Int32)">
            <summary>Get internal view offset matrix for stereo render (selected eye)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetMatrixProjection(System.Numerics.Matrix4x4)">
            <summary>Set a custom projection matrix (replaces internal projection matrix)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetMatrixModelview(System.Numerics.Matrix4x4)">
            <summary>Set a custom modelview matrix (replaces internal modelview matrix)</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetMatrixProjectionStereo(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
            <summary>Set eyes projection matrices for stereo rendering</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlSetMatrixViewOffsetStereo(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
            <summary>Set eyes view offsets matrices for stereo rendering</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadDrawCube">
            <summary>Load and draw a cube</summary>
        </member>
        <member name="M:Raylib_cs.Rlgl.rlLoadDrawQuad">
            <summary>Load and draw a quad</summary>
        </member>
        <member name="T:Raylib_cs.Wave">
            <summary>
            Wave type, defines audio wave data
            </summary>
        </member>
        <member name="F:Raylib_cs.Wave.sampleCount">
            <summary>
            Number of samples
            </summary>
        </member>
        <member name="F:Raylib_cs.Wave.sampleRate">
            <summary>
            Frequency (samples per second)
            </summary>
        </member>
        <member name="F:Raylib_cs.Wave.sampleSize">
            <summary>
            Bit depth (bits per sample): 8, 16, 32 (24 not supported)
            </summary>
        </member>
        <member name="F:Raylib_cs.Wave.channels">
            <summary>
            Number of channels (1-mono, 2-stereo)
            </summary>
        </member>
        <member name="F:Raylib_cs.Wave.data">
            <summary>
            Buffer data pointer
            </summary>
        </member>
        <member name="T:Raylib_cs.AudioStream">
            <summary>
            Audio stream type<br/>
            NOTE: Useful to create custom audio streams not bound to a specific file
            </summary>
        </member>
        <member name="F:Raylib_cs.AudioStream.buffer">
            <summary>
            Pointer to internal data(rAudioBuffer *) used by the audio system
            </summary>
        </member>
        <member name="F:Raylib_cs.AudioStream.processor">
            <summary>
            Pointer to internal data processor, useful for audio effects
            </summary>
        </member>
        <member name="F:Raylib_cs.AudioStream.sampleRate">
            <summary>
            Frequency (samples per second)
            </summary>
        </member>
        <member name="F:Raylib_cs.AudioStream.sampleSize">
            <summary>
            Bit depth (bits per sample): 8, 16, 32 (24 not supported)
            </summary>
        </member>
        <member name="F:Raylib_cs.AudioStream.channels">
            <summary>
            Number of channels (1-mono, 2-stereo)
            </summary>
        </member>
        <member name="T:Raylib_cs.Sound">
            <summary>
            Sound source type
            </summary>
        </member>
        <member name="F:Raylib_cs.Sound.stream">
            <summary>
            Audio stream
            </summary>
        </member>
        <member name="F:Raylib_cs.Sound.frameCount">
            <summary>
            Total number of frames (considering channels)
            </summary>
        </member>
        <member name="T:Raylib_cs.Music">
            <summary>
            Music stream type (audio file streaming from memory)<br/>
            NOTE: Anything longer than ~10 seconds should be streamed
            </summary>
        </member>
        <member name="F:Raylib_cs.Music.stream">
            <summary>
            Audio stream
            </summary>
        </member>
        <member name="F:Raylib_cs.Music.frameCount">
            <summary>
            Total number of samples
            </summary>
        </member>
        <member name="F:Raylib_cs.Music.looping">
            <summary>
            Music looping enable
            </summary>
        </member>
        <member name="F:Raylib_cs.Music.ctxType">
            <summary>
            Type of music context (audio filetype)
            </summary>
        </member>
        <member name="F:Raylib_cs.Music.ctxData">
            <summary>
            Audio context data, depends on type
            </summary>
        </member>
        <member name="T:Raylib_cs.BoundingBox">
            <summary>Bounding box type</summary>
        </member>
        <member name="F:Raylib_cs.BoundingBox.min">
            <summary>
            Minimum vertex box-corner
            </summary>
        </member>
        <member name="F:Raylib_cs.BoundingBox.max">
            <summary>
            Maximum vertex box-corner
            </summary>
        </member>
        <member name="T:Raylib_cs.Camera2D">
            <summary>
            Camera2D, defines position/orientation in 2d space
            </summary>
        </member>
        <member name="F:Raylib_cs.Camera2D.offset">
            <summary>
            Camera offset (displacement from target)
            </summary>
        </member>
        <member name="F:Raylib_cs.Camera2D.target">
            <summary>
            Camera target (rotation and zoom origin)
            </summary>
        </member>
        <member name="F:Raylib_cs.Camera2D.rotation">
            <summary>
             Camera rotation in degrees
            </summary>
        </member>
        <member name="F:Raylib_cs.Camera2D.zoom">
            <summary>
            Camera zoom (scaling), should be 1.0f by default
            </summary>
        </member>
        <member name="T:Raylib_cs.CameraMode">
            <summary>
            Camera system modes
            </summary>
        </member>
        <member name="T:Raylib_cs.CameraProjection">
            <summary>
            Camera projection
            </summary>
        </member>
        <member name="T:Raylib_cs.Camera3D">
            <summary>
            Camera3D, defines position/orientation in 3d space
            </summary>
        </member>
        <member name="F:Raylib_cs.Camera3D.position">
            <summary>
            Camera position
            </summary>
        </member>
        <member name="F:Raylib_cs.Camera3D.target">
            <summary>
            Camera target it looks-at
            </summary>
        </member>
        <member name="F:Raylib_cs.Camera3D.up">
            <summary>
            Camera up vector (rotation over its axis)
            </summary>
        </member>
        <member name="F:Raylib_cs.Camera3D.fovy">
            <summary>
            Camera field-of-view apperture in Y (degrees) in perspective, used as near plane width in orthographic
            </summary>
        </member>
        <member name="F:Raylib_cs.Camera3D.projection">
            <summary>
            Camera type, defines projection type: CAMERA_PERSPECTIVE or CAMERA_ORTHOGRAPHIC
            </summary>
        </member>
        <member name="T:Raylib_cs.Color">
            <summary>
            Color type, RGBA (32bit)
            </summary>
        </member>
        <member name="T:Raylib_cs.ConfigFlags">
            <summary>
            System config flags<br/>
            NOTE: Every bit registers one state (use it with bit masks)<br/>
            By default all flags are set to 0
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_VSYNC_HINT">
            <summary>
            Set to try enabling V-Sync on GPU
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_FULLSCREEN_MODE">
            <summary>
            Set to run program in fullscreen
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_WINDOW_RESIZABLE">
            <summary>
            Set to allow resizable window
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_WINDOW_UNDECORATED">
            <summary>
            Set to disable window decoration (frame and buttons)
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_WINDOW_HIDDEN">
            <summary>
            Set to hide window
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_WINDOW_MINIMIZED">
            <summary>
            Set to minimize window (iconify)
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_WINDOW_MAXIMIZED">
            <summary>
            Set to maximize window (expanded to monitor)
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_WINDOW_UNFOCUSED">
            <summary>
            Set to window non focused
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_WINDOW_TOPMOST">
            <summary>
            Set to window always on top
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_WINDOW_ALWAYS_RUN">
            <summary>
            Set to allow windows running while minimized
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_WINDOW_TRANSPARENT">
            <summary>
            Set to allow transparent framebuffer
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_WINDOW_HIGHDPI">
            <summary>
            Set to support HighDPI
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_WINDOW_MOUSE_PASSTHROUGH">
            <summary>
            Set to support mouse passthrough, only supported when FLAG_WINDOW_UNDECORATED
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_MSAA_4X_HINT">
            <summary>
            Set to try enabling MSAA 4X
            </summary>
        </member>
        <member name="F:Raylib_cs.ConfigFlags.FLAG_INTERLACED_HINT">
            <summary>
            Set to try enabling interlaced video format (for V3D)
            </summary>
        </member>
        <member name="T:Raylib_cs.TraceLogLevel">
            <summary>
            Trace log level<br/>
            NOTE: Organized by priority level
            </summary>
        </member>
        <member name="F:Raylib_cs.TraceLogLevel.LOG_ALL">
            <summary>
            Display all logs
            </summary>
        </member>
        <member name="F:Raylib_cs.TraceLogLevel.LOG_TRACE">
            <summary>
            Trace logging, intended for internal use only
            </summary>
        </member>
        <member name="F:Raylib_cs.TraceLogLevel.LOG_DEBUG">
            <summary>
            Debug logging, used for internal debugging, it should be disabled on release builds
            </summary>
        </member>
        <member name="F:Raylib_cs.TraceLogLevel.LOG_INFO">
            <summary>
            Info logging, used for program execution info
            </summary>
        </member>
        <member name="F:Raylib_cs.TraceLogLevel.LOG_WARNING">
            <summary>
            Warning logging, used on recoverable failures
            </summary>
        </member>
        <member name="F:Raylib_cs.TraceLogLevel.LOG_ERROR">
            <summary>
            Error logging, used on unrecoverable failures
            </summary>
        </member>
        <member name="F:Raylib_cs.TraceLogLevel.LOG_FATAL">
            <summary>
            Fatal logging, used to abort program: exit(EXIT_FAILURE)
            </summary>
        </member>
        <member name="F:Raylib_cs.TraceLogLevel.LOG_NONE">
            <summary>
            Disable logging
            </summary>
        </member>
        <member name="T:Raylib_cs.BlendMode">
            <summary>
            Color blending modes (pre-defined)
            </summary>
        </member>
        <member name="F:Raylib_cs.BlendMode.BLEND_ALPHA">
            <summary>
            Blend textures considering alpha (default)
            </summary>
        </member>
        <member name="F:Raylib_cs.BlendMode.BLEND_ADDITIVE">
            <summary>
            Blend textures adding colors
            </summary>
        </member>
        <member name="F:Raylib_cs.BlendMode.BLEND_MULTIPLIED">
            <summary>
            Blend textures multiplying colors
            </summary>
        </member>
        <member name="F:Raylib_cs.BlendMode.BLEND_ADD_COLORS">
            <summary>
            Blend textures adding colors (alternative)
            </summary>
        </member>
        <member name="F:Raylib_cs.BlendMode.BLEND_SUBTRACT_COLORS">
            <summary>
            Blend textures subtracting colors (alternative)
            </summary>
        </member>
        <member name="F:Raylib_cs.BlendMode.BLEND_ALPHA_PREMULTIPLY">
            <summary>
            Blend premultiplied textures considering alpha
            </summary>
        </member>
        <member name="F:Raylib_cs.BlendMode.BLEND_CUSTOM">
            <summary>
            Blend textures using custom src/dst factors (use rlSetBlendMode())
            </summary>
        </member>
        <member name="T:Raylib_cs.FontType">
            <summary>
            Font type, defines generation method
            </summary>
        </member>
        <member name="F:Raylib_cs.FontType.FONT_DEFAULT">
            <summary>
            Default font generation, anti-aliased
            </summary>
        </member>
        <member name="F:Raylib_cs.FontType.FONT_BITMAP">
            <summary>
            Bitmap font generation, no anti-aliasing
            </summary>
        </member>
        <member name="F:Raylib_cs.FontType.FONT_SDF">
            <summary>
            SDF font generation, requires external shader
            </summary>
        </member>
        <member name="T:Raylib_cs.GlyphInfo">
            <summary>
            GlyphInfo, font characters glyphs info
            </summary>
        </member>
        <member name="F:Raylib_cs.GlyphInfo.value">
            <summary>
            Character value (Unicode)
            </summary>
        </member>
        <member name="F:Raylib_cs.GlyphInfo.offsetX">
            <summary>
            Character offset X when drawing
            </summary>
        </member>
        <member name="F:Raylib_cs.GlyphInfo.offsetY">
            <summary>
            Character offset Y when drawing
            </summary>
        </member>
        <member name="F:Raylib_cs.GlyphInfo.advanceX">
            <summary>
            Character advance position X
            </summary>
        </member>
        <member name="F:Raylib_cs.GlyphInfo.image">
            <summary>
            Character image data
            </summary>
        </member>
        <member name="T:Raylib_cs.Font">
            <summary>
            Font, font texture and GlyphInfo array data
            </summary>
        </member>
        <member name="F:Raylib_cs.Font.baseSize">
            <summary>
            Base size (default chars height)
            </summary>
        </member>
        <member name="F:Raylib_cs.Font.glyphCount">
            <summary>
            Number of characters
            </summary>
        </member>
        <member name="F:Raylib_cs.Font.glyphPadding">
            <summary>
            Padding around the glyph characters
            </summary>
        </member>
        <member name="F:Raylib_cs.Font.texture">
            <summary>
            Texture atlas containing the glyphs
            </summary>
        </member>
        <member name="F:Raylib_cs.Font.recs">
            <summary>
            Rectangles in texture for the glyphs
            </summary>
        </member>
        <member name="F:Raylib_cs.Font.glyphs">
            <summary>
            Glyphs info data
            </summary>
        </member>
        <member name="T:Raylib_cs.PixelFormat">
            <summary>
            Pixel formats<br/>
            NOTE: Support depends on OpenGL version and platform
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_UNCOMPRESSED_GRAYSCALE">
            <summary>
            8 bit per pixel (no alpha)
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA">
            <summary>
            8*2 bpp (2 channels)
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_UNCOMPRESSED_R5G6B5">
            <summary>
            16 bpp
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_UNCOMPRESSED_R8G8B8">
            <summary>
            24 bpp
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_UNCOMPRESSED_R5G5B5A1">
            <summary>
            16 bpp (1 bit alpha)
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_UNCOMPRESSED_R4G4B4A4">
            <summary>
            16 bpp (4 bit alpha)
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_UNCOMPRESSED_R8G8B8A8">
            <summary>
            32 bpp
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_UNCOMPRESSED_R32">
            <summary>
            32 bpp (1 channel - float)
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_UNCOMPRESSED_R32G32B32">
            <summary>
            32*3 bpp (3 channels - float)
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_UNCOMPRESSED_R32G32B32A32">
            <summary>
            32*4 bpp (4 channels - float)
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_COMPRESSED_DXT1_RGB">
            <summary>
            4 bpp (no alpha)
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_COMPRESSED_DXT1_RGBA">
            <summary>
            4 bpp (1 bit alpha)
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_COMPRESSED_DXT3_RGBA">
            <summary>
            8 bpp
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_COMPRESSED_DXT5_RGBA">
            <summary>
            8 bpp
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_COMPRESSED_ETC1_RGB">
            <summary>
            4 bpp
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_COMPRESSED_ETC2_RGB">
            <summary>
            4 bpp
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA">
            <summary>
            8 bpp
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_COMPRESSED_PVRT_RGB">
            <summary>
            4 bpp
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_COMPRESSED_PVRT_RGBA">
            <summary>
            4 bpp
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA">
            <summary>
            8 bpp
            </summary>
        </member>
        <member name="F:Raylib_cs.PixelFormat.PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA">
            <summary>
            2 bpp
            </summary>
        </member>
        <member name="T:Raylib_cs.Image">
            <summary>
            Image, pixel data stored in CPU memory (RAM)
            </summary>
        </member>
        <member name="F:Raylib_cs.Image.data">
            <summary>
            Image raw data
            </summary>
        </member>
        <member name="F:Raylib_cs.Image.width">
            <summary>
            Image base width
            </summary>
        </member>
        <member name="F:Raylib_cs.Image.height">
            <summary>
            Image base height
            </summary>
        </member>
        <member name="F:Raylib_cs.Image.mipmaps">
            <summary>
            Mipmap levels, 1 by default
            </summary>
        </member>
        <member name="F:Raylib_cs.Image.format">
            <summary>
            Data format (PixelFormat type)
            </summary>
        </member>
        <member name="T:Raylib_cs.KeyboardKey">
            <summary>
            Keyboard keys (US keyboard layout)<br/>
            NOTE: Use GetKeyPressed() to allow redefining required keys for alternative layouts
            </summary>
        </member>
        <member name="F:Raylib_cs.KeyboardKey.KEY_NULL">
            <summary>
            NULL, used for no key pressed
            </summary>
        </member>
        <member name="T:Raylib_cs.MouseButton">
            <summary>
            Mouse buttons
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseButton.MOUSE_BUTTON_LEFT">
            <summary>
            Mouse button left
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseButton.MOUSE_BUTTON_RIGHT">
            <summary>
            Mouse button right
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseButton.MOUSE_BUTTON_MIDDLE">
            <summary>
            Mouse button middle (pressed wheel)
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseButton.MOUSE_BUTTON_SIDE">
            <summary>
            Mouse button side (advanced mouse device)
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseButton.MOUSE_BUTTON_EXTRA">
            <summary>
            Mouse button extra (advanced mouse device)
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseButton.MOUSE_BUTTON_FORWARD">
            <summary>
            Mouse button forward (advanced mouse device)
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseButton.MOUSE_BUTTON_BACK">
            <summary>
            Mouse button back (advanced mouse device)
            </summary>
        </member>
        <member name="T:Raylib_cs.MouseCursor">
            <summary>
            Mouse cursor
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseCursor.MOUSE_CURSOR_DEFAULT">
            <summary>
            Default pointer shape
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseCursor.MOUSE_CURSOR_ARROW">
            <summary>
            Arrow shape
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseCursor.MOUSE_CURSOR_IBEAM">
            <summary>
            Text writing cursor shape
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseCursor.MOUSE_CURSOR_CROSSHAIR">
            <summary>
            Cross shape
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseCursor.MOUSE_CURSOR_POINTING_HAND">
            <summary>
            Pointing hand cursor
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseCursor.MOUSE_CURSOR_RESIZE_EW">
            <summary>
            Horizontal resize/move arrow shape
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseCursor.MOUSE_CURSOR_RESIZE_NS">
            <summary>
            Vertical resize/move arrow shape
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseCursor.MOUSE_CURSOR_RESIZE_NWSE">
            <summary>
            Top-left to bottom-right diagonal resize/move arrow shape
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseCursor.MOUSE_CURSOR_RESIZE_NESW">
            <summary>
            The top-right to bottom-left diagonal resize/move arrow shape
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseCursor.MOUSE_CURSOR_RESIZE_ALL">
            <summary>
            The omni-directional resize/move cursor shape
            </summary>
        </member>
        <member name="F:Raylib_cs.MouseCursor.MOUSE_CURSOR_NOT_ALLOWED">
            <summary>
            The operation-not-allowed shape
            </summary>
        </member>
        <member name="T:Raylib_cs.GamepadAxis">
            <summary>Gamepad axis</summary>
        </member>
        <member name="F:Raylib_cs.GamepadAxis.GAMEPAD_AXIS_LEFT_X">
            <summary>
            Gamepad left stick X axis
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadAxis.GAMEPAD_AXIS_LEFT_Y">
            <summary>
            Gamepad left stick Y axis
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadAxis.GAMEPAD_AXIS_RIGHT_X">
            <summary>
            Gamepad right stick X axis
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadAxis.GAMEPAD_AXIS_RIGHT_Y">
            <summary>
            Gamepad right stick Y axis
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadAxis.GAMEPAD_AXIS_LEFT_TRIGGER">
            <summary>
            Gamepad back trigger left, pressure level: [1..-1]
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadAxis.GAMEPAD_AXIS_RIGHT_TRIGGER">
            <summary>
            Gamepad back trigger right, pressure level: [1..-1]
            </summary>
        </member>
        <member name="T:Raylib_cs.GamepadButton">
            <summary>
            Gamepad buttons
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_UNKNOWN">
            <summary>
            Unknown button, just for error checking
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_LEFT_FACE_UP">
            <summary>
            Gamepad left DPAD up button
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_LEFT_FACE_RIGHT">
            <summary>
            Gamepad left DPAD right button
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_LEFT_FACE_DOWN">
            <summary>
            Gamepad left DPAD down button
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_LEFT_FACE_LEFT">
            <summary>
            Gamepad left DPAD left button
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_RIGHT_FACE_UP">
            <summary>
            Gamepad right button up (i.e. PS3: Triangle, Xbox: Y)
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_RIGHT_FACE_RIGHT">
            <summary>
            Gamepad right button right (i.e. PS3: Square, Xbox: X)
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_RIGHT_FACE_DOWN">
            <summary>
            Gamepad right button down (i.e. PS3: Cross, Xbox: A)
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_RIGHT_FACE_LEFT">
            <summary>
            Gamepad right button left (i.e. PS3: Circle, Xbox: B)
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_LEFT_TRIGGER_1">
            <summary>
            Gamepad top/back trigger left (first), it could be a trailing button
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_LEFT_TRIGGER_2">
            <summary>
            Gamepad top/back trigger left (second), it could be a trailing button
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_RIGHT_TRIGGER_1">
            <summary>
            Gamepad top/back trigger right (first), it could be a trailing button
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_RIGHT_TRIGGER_2">
            <summary>
            Gamepad top/back trigger right (second), it could be a trailing button
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_MIDDLE_LEFT">
            <summary>
            Gamepad center buttons, left one (i.e. PS3: Select)
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_MIDDLE">
            <summary>
            Gamepad center buttons, middle one (i.e. PS3: PS, Xbox: XBOX)
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_MIDDLE_RIGHT">
            <summary>
            Gamepad center buttons, right one (i.e. PS3: Start)
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_LEFT_THUMB">
            <summary>
            Gamepad joystick pressed button left
            </summary>
        </member>
        <member name="F:Raylib_cs.GamepadButton.GAMEPAD_BUTTON_RIGHT_THUMB">
            <summary>
            Gamepad joystick pressed button right
            </summary>
        </member>
        <member name="T:Raylib_cs.Gesture">
            <summary>
            Gesture
            NOTE: It could be used as flags to enable only some gestures
            </summary>
        </member>
        <member name="T:Raylib_cs.VrDeviceInfo">
            <summary>
            Head-Mounted-Display device parameters
            </summary>
        </member>
        <member name="F:Raylib_cs.VrDeviceInfo.hResolution">
            <summary>
            HMD horizontal resolution in pixels
            </summary>
        </member>
        <member name="F:Raylib_cs.VrDeviceInfo.vResolution">
            <summary>
            HMD vertical resolution in pixels
            </summary>
        </member>
        <member name="F:Raylib_cs.VrDeviceInfo.hScreenSize">
            <summary>
            HMD horizontal size in meters
            </summary>
        </member>
        <member name="F:Raylib_cs.VrDeviceInfo.vScreenSize">
            <summary>
            HMD vertical size in meters
            </summary>
        </member>
        <member name="F:Raylib_cs.VrDeviceInfo.vScreenCenter">
            <summary>
            HMD screen center in meters
            </summary>
        </member>
        <member name="F:Raylib_cs.VrDeviceInfo.eyeToScreenDistance">
            <summary>
            HMD distance between eye and display in meters
            </summary>
        </member>
        <member name="F:Raylib_cs.VrDeviceInfo.lensSeparationDistance">
            <summary>
            HMD lens separation distance in meters
            </summary>
        </member>
        <member name="F:Raylib_cs.VrDeviceInfo.interpupillaryDistance">
            <summary>
            HMD IPD (distance between pupils) in meters
            </summary>
        </member>
        <member name="F:Raylib_cs.VrDeviceInfo.lensDistortionValues">
            <summary>
            HMD lens distortion constant parameters
            </summary>
        </member>
        <member name="F:Raylib_cs.VrDeviceInfo.chromaAbCorrection">
            <summary>
            HMD chromatic aberration correction parameters
            </summary>
        </member>
        <member name="T:Raylib_cs.VrStereoConfig">
            <summary>
            VR Stereo rendering configuration for simulator
            </summary>
        </member>
        <member name="F:Raylib_cs.VrStereoConfig.projection1">
            <summary>
            VR projection matrices (per eye)
            </summary>
        </member>
        <member name="F:Raylib_cs.VrStereoConfig.projection2">
            <summary>
            VR projection matrices (per eye)
            </summary>
        </member>
        <member name="F:Raylib_cs.VrStereoConfig.viewOffset1">
            <summary>
            VR view offset matrices (per eye)
            </summary>
        </member>
        <member name="F:Raylib_cs.VrStereoConfig.viewOffset2">
            <summary>
            VR view offset matrices (per eye)
            </summary>
        </member>
        <member name="F:Raylib_cs.VrStereoConfig.leftLensCenter">
            <summary>
            VR left lens center
            </summary>
        </member>
        <member name="F:Raylib_cs.VrStereoConfig.rightLensCenter">
            <summary>
            VR right lens center
            </summary>
        </member>
        <member name="F:Raylib_cs.VrStereoConfig.leftScreenCenter">
            <summary>
            VR left screen center
            </summary>
        </member>
        <member name="F:Raylib_cs.VrStereoConfig.rightScreenCenter">
            <summary>
            VR right screen center
            </summary>
        </member>
        <member name="F:Raylib_cs.VrStereoConfig.scale">
            <summary>
            VR distortion scale
            </summary>
        </member>
        <member name="F:Raylib_cs.VrStereoConfig.scaleIn">
            <summary>
            VR distortion scale in
            </summary>
        </member>
        <member name="T:Raylib_cs.Logging">
            <summary>
            Logging workaround for formatting strings from native code
            </summary>
        </member>
        <member name="T:Raylib_cs.MaterialMapIndex">
            <summary>
            Material map index
            </summary>
        </member>
        <member name="F:Raylib_cs.MaterialMapIndex.MATERIAL_MAP_ALBEDO">
            <summary>
            NOTE: Same as MATERIAL_MAP_DIFFUSE
            </summary>
        </member>
        <member name="F:Raylib_cs.MaterialMapIndex.MATERIAL_MAP_METALNESS">
            <summary>
            NOTE: Same as MATERIAL_MAP_SPECULAR
            </summary>
        </member>
        <member name="F:Raylib_cs.MaterialMapIndex.MATERIAL_MAP_CUBEMAP">
            <summary>
            NOTE: Uses GL_TEXTURE_CUBE_MAP
            </summary>
        </member>
        <member name="F:Raylib_cs.MaterialMapIndex.MATERIAL_MAP_IRRADIANCE">
            <summary>
            NOTE: Uses GL_TEXTURE_CUBE_MAP
            </summary>
        </member>
        <member name="F:Raylib_cs.MaterialMapIndex.MATERIAL_MAP_PREFILTER">
            <summary>
            NOTE: Uses GL_TEXTURE_CUBE_MAP
            </summary>
        </member>
        <member name="T:Raylib_cs.MaterialMap">
            <summary>
            Material texture map
            </summary>
        </member>
        <member name="F:Raylib_cs.MaterialMap.texture">
            <summary>
            Material map texture
            </summary>
        </member>
        <member name="F:Raylib_cs.MaterialMap.color">
            <summary>
            Material map color
            </summary>
        </member>
        <member name="F:Raylib_cs.MaterialMap.value">
            <summary>
            Material map value
            </summary>
        </member>
        <member name="T:Raylib_cs.Material">
            <summary>
            Material type (generic)
            </summary>
        </member>
        <member name="F:Raylib_cs.Material.shader">
            <summary>
            Material shader
            </summary>
        </member>
        <member name="F:Raylib_cs.Material.maps">
            <summary>
            Material maps
            </summary>
        </member>
        <member name="F:Raylib_cs.Material.param">
            <summary>
            Material generic parameters (if required)
            </summary>
        </member>
        <member name="T:Raylib_cs.Mesh">
            <summary>
            Vertex data definning a mesh<br/>
            NOTE: Data stored in CPU memory (and GPU)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.vertexCount">
            <summary>
             Number of vertices stored in arrays
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.triangleCount">
            <summary>
            Number of triangles stored (indexed or not)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.vertices">
            <summary>
            Vertex position (XYZ - 3 components per vertex) (shader-location = 0)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.texcoords">
            <summary>
            Vertex texture coordinates (UV - 2 components per vertex) (shader-location = 1)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.texcoords2">
            <summary>
            Vertex second texture coordinates (useful for lightmaps) (shader-location = 5)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.normals">
            <summary>
            Vertex normals (XYZ - 3 components per vertex) (shader-location = 2)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.tangents">
            <summary>
            Vertex tangents (XYZW - 4 components per vertex) (shader-location = 4)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.colors">
            <summary>
            Vertex colors (RGBA - 4 components per vertex) (shader-location = 3)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.indices">
            <summary>
            Vertex indices (in case vertex data comes indexed)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.animVertices">
            <summary>
            Animated vertex positions (after bones transformations)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.animNormals">
            <summary>
            Animated normals (after bones transformations)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.boneIds">
            <summary>
            Vertex bone ids, up to 4 bones influence by vertex (skinning)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.boneWeights">
            <summary>
            Vertex bone weight, up to 4 bones influence by vertex (skinning)
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.vaoId">
            <summary>
            OpenGL Vertex Array Object id
            </summary>
        </member>
        <member name="F:Raylib_cs.Mesh.vboId">
            <summary>
            OpenGL Vertex Buffer Objects id (default vertex data, uint[])
            </summary>
        </member>
        <member name="T:Raylib_cs.BoneInfo">
            <summary>
            Bone information
            </summary>
        </member>
        <member name="F:Raylib_cs.BoneInfo.name">
            <summary>
            Bone name (char[32])
            </summary>
        </member>
        <member name="F:Raylib_cs.BoneInfo.parent">
            <summary>
            Bone parent
            </summary>
        </member>
        <member name="T:Raylib_cs.Model">
            <summary>
            Model type
            </summary>
        </member>
        <member name="F:Raylib_cs.Model.transform">
            <summary>
            Local transform matrix
            </summary>
        </member>
        <member name="F:Raylib_cs.Model.meshCount">
            <summary>
            Number of meshes
            </summary>
        </member>
        <member name="F:Raylib_cs.Model.materialCount">
            <summary>
            Number of materials
            </summary>
        </member>
        <member name="F:Raylib_cs.Model.meshes">
            <summary>
            Meshes array (Mesh *)
            </summary>
        </member>
        <member name="F:Raylib_cs.Model.materials">
            <summary>
            Materials array (Material *)
            </summary>
        </member>
        <member name="F:Raylib_cs.Model.meshMaterial">
            <summary>
            Mesh material number (int *)
            </summary>
        </member>
        <member name="F:Raylib_cs.Model.boneCount">
            <summary>
            Number of bones
            </summary>
        </member>
        <member name="F:Raylib_cs.Model.bones">
            <summary>
            Bones information (skeleton, BoneInfo *)
            </summary>
        </member>
        <member name="F:Raylib_cs.Model.bindPose">
            <summary>
            Bones base transformation (pose, Transform *)
            </summary>
        </member>
        <member name="T:Raylib_cs.ModelAnimation">
            <summary>
            Model animation
            </summary>
        </member>
        <member name="F:Raylib_cs.ModelAnimation.boneCount">
            <summary>
            Number of bones
            </summary>
        </member>
        <member name="F:Raylib_cs.ModelAnimation.frameCount">
            <summary>
            Number of animation frames
            </summary>
        </member>
        <member name="F:Raylib_cs.ModelAnimation.bones">
            <summary>
            Bones information (skeleton, BoneInfo *)
            </summary>
        </member>
        <member name="P:Raylib_cs.ModelAnimation.BoneInfo">
            <inheritdoc cref="F:Raylib_cs.ModelAnimation.bones"/>
        </member>
        <member name="F:Raylib_cs.ModelAnimation.framePoses">
            <summary>
            Poses array by frame (Transform **)
            </summary>
        </member>
        <member name="P:Raylib_cs.ModelAnimation.FramePoses">
            <inheritdoc cref="F:Raylib_cs.ModelAnimation.framePoses"/>
        </member>
        <member name="T:Raylib_cs.NPatchLayout">
            <summary>
            N-patch layout
            </summary>
        </member>
        <member name="F:Raylib_cs.NPatchLayout.NPATCH_NINE_PATCH">
            <summary>
            Npatch defined by 3x3 tiles
            </summary>
        </member>
        <member name="F:Raylib_cs.NPatchLayout.NPATCH_THREE_PATCH_VERTICAL">
            <summary>
            Npatch defined by 1x3 tiles
            </summary>
        </member>
        <member name="F:Raylib_cs.NPatchLayout.NPATCH_THREE_PATCH_HORIZONTAL">
            <summary>
            Npatch defined by 3x1 tiles
            </summary>
        </member>
        <member name="T:Raylib_cs.NPatchInfo">
            <summary>
            N-Patch layout info
            </summary>
        </member>
        <member name="F:Raylib_cs.NPatchInfo.source">
            <summary>
            Texture source rectangle
            </summary>
        </member>
        <member name="F:Raylib_cs.NPatchInfo.left">
            <summary>
            Left border offset
            </summary>
        </member>
        <member name="F:Raylib_cs.NPatchInfo.top">
            <summary>
            Top border offset
            </summary>
        </member>
        <member name="F:Raylib_cs.NPatchInfo.right">
            <summary>
            Right border offset
            </summary>
        </member>
        <member name="F:Raylib_cs.NPatchInfo.bottom">
            <summary>
            Bottom border offset
            </summary>
        </member>
        <member name="F:Raylib_cs.NPatchInfo.layout">
            <summary>
            Layout of the n-patch: 3x3, 1x3 or 3x1
            </summary>
        </member>
        <member name="T:Raylib_cs.Ray">
            <summary>
            Ray, ray for raycasting
            </summary>
        </member>
        <member name="F:Raylib_cs.Ray.position">
            <summary>
            Ray position (origin)
            </summary>
        </member>
        <member name="F:Raylib_cs.Ray.direction">
            <summary>
            Ray direction
            </summary>
        </member>
        <member name="T:Raylib_cs.RayCollision">
            <summary>
            Raycast hit information
            </summary>
        </member>
        <member name="F:Raylib_cs.RayCollision.hit">
            <summary>
            Did the ray hit something?
            </summary>
        </member>
        <member name="F:Raylib_cs.RayCollision.distance">
            <summary>
            Distance to nearest hit
            </summary>
        </member>
        <member name="F:Raylib_cs.RayCollision.point">
            <summary>
            Position of nearest hit
            </summary>
        </member>
        <member name="F:Raylib_cs.RayCollision.normal">
            <summary>
            Surface normal of hit
            </summary>
        </member>
        <member name="T:Raylib_cs.Rectangle">
            <summary>
            Rectangle type
            </summary>
        </member>
        <member name="T:Raylib_cs.RenderBatch">
            <summary>
            RenderBatch type
            </summary>
        </member>
        <member name="F:Raylib_cs.RenderBatch.buffersCount">
            <summary>
            Number of vertex buffers (multi-buffering support)
            </summary>
        </member>
        <member name="F:Raylib_cs.RenderBatch.currentBuffer">
            <summary>
            Current buffer tracking in case of multi-buffering
            </summary>
        </member>
        <member name="F:Raylib_cs.RenderBatch.vertexBuffer">
            <summary>
            Dynamic buffer(s) for vertex data
            </summary>
        </member>
        <member name="F:Raylib_cs.RenderBatch.draws">
            <summary>
            Draw calls array, depends on textureId
            </summary>
        </member>
        <member name="F:Raylib_cs.RenderBatch.drawsCounter">
            <summary>
            Draw calls counter
            </summary>
        </member>
        <member name="F:Raylib_cs.RenderBatch.currentDepth">
            <summary>
            Current depth value for next draw
            </summary>
        </member>
        <member name="T:Raylib_cs.VertexBuffer">
            <summary>
            Dynamic vertex buffers (position + texcoords + colors + indices arrays)
            </summary>
        </member>
        <member name="F:Raylib_cs.VertexBuffer.elementCount">
            <summary>
            Number of elements in the buffer (QUADS)
            </summary>
        </member>
        <member name="F:Raylib_cs.VertexBuffer.vertices">
            <summary>
            Vertex position (XYZ - 3 components per vertex) (shader-location = 0)
            </summary>
        </member>
        <member name="F:Raylib_cs.VertexBuffer.texcoords">
            <summary>
            Vertex texture coordinates (UV - 2 components per vertex) (shader-location = 1)
            </summary>
        </member>
        <member name="F:Raylib_cs.VertexBuffer.colors">
            <summary>
            Vertex colors (RGBA - 4 components per vertex) (shader-location = 3)
            </summary>
        </member>
        <member name="F:Raylib_cs.VertexBuffer.indices">
            <summary>
            Vertex indices (in case vertex data comes indexed) (6 indices per quad)<br/>
            unsigned int* for GRAPHICS_API_OPENGL_11 or GRAPHICS_API_OPENGL_33<br/>
            unsigned short* for GRAPHICS_API_OPENGL_ES2
            </summary>
        </member>
        <member name="F:Raylib_cs.VertexBuffer.vaoId">
            <summary>
            OpenGL Vertex Array Object id
            </summary>
        </member>
        <member name="F:Raylib_cs.VertexBuffer.vboId">
            <summary>
            OpenGL Vertex Buffer Objects id (4 types of vertex data)
            </summary>
        </member>
        <member name="T:Raylib_cs.DrawCall">
            <summary>
            Dynamic vertex buffers (position + texcoords + colors + indices arrays)
            </summary>
        </member>
        <member name="F:Raylib_cs.DrawCall.mode">
            <summary>
            Drawing mode: LINES, TRIANGLES, QUADS
            </summary>
        </member>
        <member name="F:Raylib_cs.DrawCall.vertexCount">
            <summary>
            Number of vertices for the draw call
            </summary>
        </member>
        <member name="F:Raylib_cs.DrawCall.vertexAlignment">
            <summary>
            Number of vertices required for index alignment (LINES, TRIANGLES)
            </summary>
        </member>
        <member name="F:Raylib_cs.DrawCall.textureId">
            <summary>
            Texture id to be used on the draw -> Use to create new draw call if changes
            </summary>
        </member>
        <member name="T:Raylib_cs.MatrixMode">
            <summary>
            Matrix Modes (equivalent to OpenGL)
            </summary>
        </member>
        <member name="F:Raylib_cs.MatrixMode.MODELVIEW">
            <summary>
            GL_MODELVIEW
            </summary>
        </member>
        <member name="F:Raylib_cs.MatrixMode.PROJECTION">
            <summary>
            GL_PROJECTION
            </summary>
        </member>
        <member name="F:Raylib_cs.MatrixMode.TEXTURE">
            <summary>
            GL_TEXTURE
            </summary>
        </member>
        <member name="T:Raylib_cs.DrawMode">
            <summary>
            Primitive assembly draw modes
            </summary>
        </member>
        <member name="F:Raylib_cs.DrawMode.LINES">
            <summary>
            GL_LINES
            </summary>
        </member>
        <member name="F:Raylib_cs.DrawMode.TRIANGLES">
            <summary>
            GL_TRIANGLES
            </summary>
        </member>
        <member name="F:Raylib_cs.DrawMode.QUADS">
            <summary>
            GL_QUADS
            </summary>
        </member>
        <member name="T:Raylib_cs.TextureFilters">
            <summary>
            Texture parameters (equivalent to OpenGL defines)
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilters.NEAREST">
            <summary>
            RL_TEXTURE_FILTER_NEAREST
            <br/>
            GL_NEAREST
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilters.LINEAR">
            <summary>
            RL_TEXTURE_FILTER_LINEAR
            <br/>
            GL_LINEAR
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilters.MIP_NEAREST">
            <summary>
            RL_TEXTURE_FILTER_MIP_NEAREST
            <br/>
            GL_NEAREST_MIPMAP_NEAREST
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilters.NEAREST_MIP_LINEAR">
            <summary>
            RL_TEXTURE_FILTER_NEAREST_MIP_LINEAR
            <br/>
            GL_NEAREST_MIPMAP_LINEAR
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilters.LINEAR_MIP_NEAREST">
            <summary>
            RL_TEXTURE_FILTER_LINEAR_MIP_NEAREST
            <br/>
            GL_LINEAR_MIPMAP_NEAREST
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilters.MIP_LINEAR">
            <summary>
            RL_TEXTURE_FILTER_MIP_LINEAR
            <br/>
            GL_LINEAR_MIPMAP_LINEAR
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilters.ANISOTROPIC">
            <summary>
            RL_TEXTURE_FILTER_ANISOTROPIC
            <br/>
            Anisotropic filter (custom identifier)
            </summary>
        </member>
        <member name="T:Raylib_cs.ShaderType">
            <summary>
            GL Shader type
            </summary>
        </member>
        <member name="F:Raylib_cs.ShaderType.FRAGMENT">
            <summary>
            RL_FRAGMENT_SHADER
            <br/>
            GL_FRAGMENT_SHADER
            </summary>
        </member>
        <member name="F:Raylib_cs.ShaderType.VERTEX">
            <summary>
            RL_VERTEX_SHADER
            <br/>
            GL_VERTEX_SHADER
            </summary>
        </member>
        <member name="F:Raylib_cs.ShaderType.COMPUTE">
            <summary>
            RL_COMPUTE_SHADER
            <br/>
            GL_COMPUTE_SHADER
            </summary>
        </member>
        <member name="T:Raylib_cs.RenderTexture2D">
            <summary>
            RenderTexture2D type, for texture rendering
            </summary>
        </member>
        <member name="F:Raylib_cs.RenderTexture2D.id">
            <summary>
            OpenGL Framebuffer Object (FBO) id
            </summary>
        </member>
        <member name="F:Raylib_cs.RenderTexture2D.texture">
            <summary>
             Color buffer attachment texture
            </summary>
        </member>
        <member name="F:Raylib_cs.RenderTexture2D.depth">
            <summary>
            Depth buffer attachment texture
            </summary>
        </member>
        <member name="T:Raylib_cs.ShaderLocationIndex">
            <summary>
            Shader location index
            </summary>
        </member>
        <member name="T:Raylib_cs.ShaderAttributeDataType">
            <summary>
            Shader attribute data types
            </summary>
        </member>
        <member name="T:Raylib_cs.ShaderUniformDataType">
            <summary>
            Shader uniform data type
            </summary>
        </member>
        <member name="T:Raylib_cs.Shader">
            <summary>
            Shader type (generic)
            </summary>
        </member>
        <member name="F:Raylib_cs.Shader.id">
            <summary>
            Shader program id
            </summary>
        </member>
        <member name="F:Raylib_cs.Shader.locs">
            <summary>
            Shader locations array (MAX_SHADER_LOCATIONS, int *)
            </summary>
        </member>
        <member name="T:Raylib_cs.TextureFilter">
            <summary>
            Texture parameters: filter mode<br/>
            NOTE 1: Filtering considers mipmaps if available in the texture<br/>
            NOTE 2: Filter is accordingly set for minification and magnification
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilter.TEXTURE_FILTER_POINT">
            <summary>
            No filter, just pixel aproximation
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilter.TEXTURE_FILTER_BILINEAR">
            <summary>
            Linear filtering
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilter.TEXTURE_FILTER_TRILINEAR">
            <summary>
            Trilinear filtering (linear with mipmaps)
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilter.TEXTURE_FILTER_ANISOTROPIC_4X">
            <summary>
            Anisotropic filtering 4x
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilter.TEXTURE_FILTER_ANISOTROPIC_8X">
            <summary>
            Anisotropic filtering 8x
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureFilter.TEXTURE_FILTER_ANISOTROPIC_16X">
            <summary>
            Anisotropic filtering 16x
            </summary>
        </member>
        <member name="T:Raylib_cs.TextureWrap">
            <summary>
            Texture parameters: wrap mode
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureWrap.TEXTURE_WRAP_REPEAT">
            <summary>
            Repeats texture in tiled mode
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureWrap.TEXTURE_WRAP_CLAMP">
            <summary>
            Clamps texture to edge pixel in tiled mode
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureWrap.TEXTURE_WRAP_MIRROR_REPEAT">
            <summary>
            Mirrors and repeats the texture in tiled mode
            </summary>
        </member>
        <member name="F:Raylib_cs.TextureWrap.TEXTURE_WRAP_MIRROR_CLAMP">
            <summary>
            Mirrors and clamps to border the texture in tiled mode
            </summary>
        </member>
        <member name="T:Raylib_cs.CubemapLayout">
            <summary>
            Cubemap layouts
            </summary>
        </member>
        <member name="F:Raylib_cs.CubemapLayout.CUBEMAP_LAYOUT_AUTO_DETECT">
            <summary>
            Automatically detect layout type
            </summary>
        </member>
        <member name="F:Raylib_cs.CubemapLayout.CUBEMAP_LAYOUT_LINE_VERTICAL">
            <summary>
            Layout is defined by a vertical line with faces
            </summary>
        </member>
        <member name="F:Raylib_cs.CubemapLayout.CUBEMAP_LAYOUT_LINE_HORIZONTAL">
            <summary>
            Layout is defined by an horizontal line with faces
            </summary>
        </member>
        <member name="F:Raylib_cs.CubemapLayout.CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR">
            <summary>
            Layout is defined by a 3x4 cross with cubemap faces
            </summary>
        </member>
        <member name="F:Raylib_cs.CubemapLayout.CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE">
            <summary>
            Layout is defined by a 4x3 cross with cubemap faces
            </summary>
        </member>
        <member name="F:Raylib_cs.CubemapLayout.CUBEMAP_LAYOUT_PANORAMA">
            <summary>
            Layout is defined by a panorama image (equirectangular map)
            </summary>
        </member>
        <member name="T:Raylib_cs.Texture2D">
            <summary>
            Texture2D type<br/>
            NOTE: Data stored in GPU memory
            </summary>
        </member>
        <member name="F:Raylib_cs.Texture2D.id">
            <summary>
            OpenGL texture id
            </summary>
        </member>
        <member name="F:Raylib_cs.Texture2D.width">
            <summary>
            Texture base width
            </summary>
        </member>
        <member name="F:Raylib_cs.Texture2D.height">
            <summary>
            Texture base height
            </summary>
        </member>
        <member name="F:Raylib_cs.Texture2D.mipmaps">
            <summary>
            Mipmap levels, 1 by default
            </summary>
        </member>
        <member name="F:Raylib_cs.Texture2D.format">
            <summary>
            Data format (PixelFormat type)
            </summary>
        </member>
        <member name="T:Raylib_cs.Transform">
            <summary>
            Transform, vectex transformation data
            </summary>
        </member>
        <member name="F:Raylib_cs.Transform.translation">
            <summary>
            Translation
            </summary>
        </member>
        <member name="F:Raylib_cs.Transform.rotation">
            <summary>
            Rotation
            </summary>
        </member>
        <member name="F:Raylib_cs.Transform.scale">
            <summary>
            Scale
            </summary>
        </member>
        <member name="T:Raylib_cs.UTF8Buffer">
            <summary>
            Converts text to a UTF8 buffer for passing to native code
            </summary>
        </member>
        <member name="T:Raylib_cs.FilePathList">
            <summary>
            File path list
            </summary>
        </member>
        <member name="F:Raylib_cs.FilePathList.capacity">
            <summary>
            Filepaths max entries
            </summary>
        </member>
        <member name="F:Raylib_cs.FilePathList.count">
            <summary>
            Filepaths entries count
            </summary>
        </member>
        <member name="F:Raylib_cs.FilePathList.paths">
            <summary>
            Filepaths entries
            </summary>
        </member>
    </members>
</doc>
